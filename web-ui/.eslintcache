[{"/home/user/Desktop/web-ui/src/reportWebVitals.js":"1","/home/user/Desktop/web-ui/src/redux/store.js":"2","/home/user/Desktop/web-ui/src/pages/Manage/Manage.js":"3","/home/user/Desktop/web-ui/src/utils/toast.js":"4","/home/user/Desktop/web-ui/src/redux/reducers/dataReducer.js":"5","/home/user/Desktop/web-ui/src/components/ContentManage/Content.js":"6","/home/user/Desktop/web-ui/src/redux/actions/userAction.js":"7","/home/user/Desktop/web-ui/src/redux/actions/dataAction.js":"8","/home/user/Desktop/web-ui/src/components/ChatScreen/ChatHeader.js":"9","/home/user/Desktop/web-ui/src/components/HeaderManage/DropdownMenu.js":"10","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions.js":"11","/home/user/Desktop/web-ui/src/funcs/utf8.js":"12","/home/user/Desktop/web-ui/src/components/GroupInfo/MemberItem.js":"13","/home/user/Desktop/web-ui/src/components/ChatScreen/ChatArea/Message.js":"14","/home/user/Desktop/web-ui/src/components/Tabs/ChatTab/ChatTab.js":"15","/home/user/Desktop/web-ui/src/funcs/fileSizeCal.js":"16","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/SelectSession/SelectSession.js":"17","/home/user/Desktop/web-ui/src/components/EditGroupsModal/Tabs/Delete.js":"18","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/SelectSession/Card.js":"19","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/AdminSession/MainChart.js":"20","/home/user/Desktop/web-ui/src/funcs/validation.js":"21","/home/user/Desktop/web-ui/src/components/GroupInfo/GroupInfo.js":"22","/home/user/Desktop/web-ui/src/apollo/apolloProvider.js":"23","/home/user/Desktop/web-ui/src/components/EditGroupsModal/EditGroupsModal.js":"24","/home/user/Desktop/web-ui/src/components/EditGroupsModal/Tabs/Update.js":"25","/home/user/Desktop/web-ui/src/const/string.js":"26","/home/user/Desktop/web-ui/src/pages/Chat/Chat.js":"27","/home/user/Desktop/web-ui/src/components/Tabs/ChatTab/ChatDropDown.js":"28","/home/user/Desktop/web-ui/src/components/NavigationTabs/NavigationTabs.js":"29","/home/user/Desktop/web-ui/src/components/Tabs/SwitchTab.js":"30","/home/user/Desktop/web-ui/src/components/NavigationTabs/NavigationTab.js":"31","/home/user/Desktop/web-ui/src/components/Tabs/ProfileTab/ProfileTab.js":"32","/home/user/Desktop/web-ui/src/components/Tabs/ProfileTab/UploadedFile.js":"33","/home/user/Desktop/web-ui/src/components/EditGroupsModal/Tabs/Create.js":"34","/home/user/Desktop/web-ui/src/index.js":"35","/home/user/Desktop/web-ui/src/pages/Error/Error.js":"36","/home/user/Desktop/web-ui/src/components/FooterManage/Footer.js":"37","/home/user/Desktop/web-ui/src/components/NavigationAvatar/NavigationAvatar.js":"38","/home/user/Desktop/web-ui/src/components/ChatScreen/ChatInput.js":"39","/home/user/Desktop/web-ui/src/const/tabs.js":"40","/home/user/Desktop/web-ui/src/components/HeaderManage/ModalProfile.js":"41","/home/user/Desktop/web-ui/src/components/CallRealTime/CallVideo.js":"42","/home/user/Desktop/web-ui/src/funcs/upperFirstLetter.js":"43","/home/user/Desktop/web-ui/src/components/Tabs/ChatTab/ChatItem.js":"44","/home/user/Desktop/web-ui/src/pages/Login/Login.js":"45","/home/user/Desktop/web-ui/src/const/googleAPI.js":"46","/home/user/Desktop/web-ui/src/components/HeaderManage/Header.js":"47","/home/user/Desktop/web-ui/src/components/Tabs/SettingsTab/SettingsTab.js":"48","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/StaffSession/StaffSession.js":"49","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/SelectSession/ChooseItem.js":"50","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/AdminSession/AdminTableItem.js":"51","/home/user/Desktop/web-ui/src/components/ChatScreen/ChatArea/ChatArea.js":"52","/home/user/Desktop/web-ui/src/redux/types.js":"53","/home/user/Desktop/web-ui/src/redux/reducers/userReducer.js":"54","/home/user/Desktop/web-ui/src/components/CallRealTime/VoiceCall.js":"55","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/AdminSession/PieChart.js":"56","/home/user/Desktop/web-ui/src/utils/dynamicRoute.js":"57","/home/user/Desktop/web-ui/src/funcs/formatDate.js":"58","/home/user/Desktop/web-ui/src/funcs/errors.js":"59","/home/user/Desktop/web-ui/src/App.js":"60","/home/user/Desktop/web-ui/src/components/Tabs/ChatTab/ChatItemSkeleton.js":"61","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/AdminSession/AdminSession.js":"62","/home/user/Desktop/web-ui/src/components/ChatScreen/ChatArea/MessageSkeleton.js":"63"},{"size":362,"mtime":1611797714027,"results":"64","hashOfConfig":"65"},{"size":561,"mtime":1612759857326,"results":"66","hashOfConfig":"65"},{"size":498,"mtime":1613818601390,"results":"67","hashOfConfig":"65"},{"size":1192,"mtime":1616947514752,"results":"68","hashOfConfig":"65"},{"size":3957,"mtime":1618375518006,"results":"69","hashOfConfig":"65"},{"size":348,"mtime":1613818916125,"results":"70","hashOfConfig":"65"},{"size":548,"mtime":1614498594315,"results":"71","hashOfConfig":"65"},{"size":3842,"mtime":1618376690812,"results":"72","hashOfConfig":"65"},{"size":6149,"mtime":1618731320169,"results":"73","hashOfConfig":"65"},{"size":1595,"mtime":1615474074334,"results":"74","hashOfConfig":"65"},{"size":9915,"mtime":1615474263977,"results":"75","hashOfConfig":"65"},{"size":165,"mtime":1614656831303,"results":"76","hashOfConfig":"65"},{"size":1273,"mtime":1615175398956,"results":"77","hashOfConfig":"65"},{"size":15614,"mtime":1618717455416,"results":"78","hashOfConfig":"65"},{"size":24284,"mtime":1618731243035,"results":"79","hashOfConfig":"65"},{"size":264,"mtime":1615368731383,"results":"80","hashOfConfig":"65"},{"size":6652,"mtime":1615430196729,"results":"81","hashOfConfig":"65"},{"size":3273,"mtime":1615364580944,"results":"82","hashOfConfig":"65"},{"size":627,"mtime":1613823308259,"results":"83","hashOfConfig":"65"},{"size":3244,"mtime":1615452474761,"results":"84","hashOfConfig":"65"},{"size":392,"mtime":1615435743726,"results":"85","hashOfConfig":"65"},{"size":8043,"mtime":1618717461632,"results":"86","hashOfConfig":"65"},{"size":1777,"mtime":1618731724562,"results":"87","hashOfConfig":"65"},{"size":2125,"mtime":1618667476441,"results":"88","hashOfConfig":"65"},{"size":6778,"mtime":1618716458866,"results":"89","hashOfConfig":"65"},{"size":1143,"mtime":1617614981115,"results":"90","hashOfConfig":"65"},{"size":14674,"mtime":1618729771470,"results":"91","hashOfConfig":"65"},{"size":10474,"mtime":1618728182265,"results":"92","hashOfConfig":"65"},{"size":840,"mtime":1618717975728,"results":"93","hashOfConfig":"65"},{"size":804,"mtime":1613038314762,"results":"94","hashOfConfig":"65"},{"size":1011,"mtime":1613035910460,"results":"95","hashOfConfig":"65"},{"size":5508,"mtime":1618201945197,"results":"96","hashOfConfig":"65"},{"size":1146,"mtime":1615368764588,"results":"97","hashOfConfig":"65"},{"size":6389,"mtime":1618401354563,"results":"98","hashOfConfig":"65"},{"size":609,"mtime":1612879350673,"results":"99","hashOfConfig":"65"},{"size":152,"mtime":1612365379352,"results":"100","hashOfConfig":"65"},{"size":299,"mtime":1613814640543,"results":"101","hashOfConfig":"65"},{"size":1636,"mtime":1618113292814,"results":"102","hashOfConfig":"65"},{"size":16163,"mtime":1618731598515,"results":"103","hashOfConfig":"65"},{"size":630,"mtime":1613035388894,"results":"104","hashOfConfig":"65"},{"size":6519,"mtime":1615474029585,"results":"105","hashOfConfig":"65"},{"size":8234,"mtime":1618387104259,"results":"106","hashOfConfig":"65"},{"size":108,"mtime":1614159585625,"results":"107","hashOfConfig":"65"},{"size":7819,"mtime":1618716728760,"results":"108","hashOfConfig":"65"},{"size":3030,"mtime":1617789777671,"results":"109","hashOfConfig":"65"},{"size":93,"mtime":1616735859997,"results":"110","hashOfConfig":"65"},{"size":1905,"mtime":1615446262412,"results":"111","hashOfConfig":"65"},{"size":10322,"mtime":1618203278112,"results":"112","hashOfConfig":"65"},{"size":5007,"mtime":1615436760338,"results":"113","hashOfConfig":"65"},{"size":884,"mtime":1613960023757,"results":"114","hashOfConfig":"65"},{"size":3846,"mtime":1615474230277,"results":"115","hashOfConfig":"65"},{"size":5963,"mtime":1618731279852,"results":"116","hashOfConfig":"65"},{"size":1620,"mtime":1618375490193,"results":"117","hashOfConfig":"65"},{"size":1492,"mtime":1614498630108,"results":"118","hashOfConfig":"65"},{"size":5453,"mtime":1616768102182,"results":"119","hashOfConfig":"65"},{"size":1624,"mtime":1615454108147,"results":"120","hashOfConfig":"65"},{"size":1147,"mtime":1613918592925,"results":"121","hashOfConfig":"65"},{"size":653,"mtime":1618059865071,"results":"122","hashOfConfig":"65"},{"size":301,"mtime":1618195242770,"results":"123","hashOfConfig":"65"},{"size":1489,"mtime":1618717937874,"results":"124","hashOfConfig":"65"},{"size":962,"mtime":1618728085270,"results":"125","hashOfConfig":"65"},{"size":9177,"mtime":1615475432070,"results":"126","hashOfConfig":"65"},{"size":1064,"mtime":1618731017022,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q5trfz",{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"138"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"147"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"156"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"144"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"132"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"132"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"132"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"132"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"156"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"156"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"132"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"132"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"132"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"132"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"132"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"156"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"132"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"156"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/user/Desktop/web-ui/src/reportWebVitals.js",[],"/home/user/Desktop/web-ui/src/redux/store.js",[],["285","286"],"/home/user/Desktop/web-ui/src/pages/Manage/Manage.js",[],["287","288"],"/home/user/Desktop/web-ui/src/utils/toast.js",[],["289","290"],"/home/user/Desktop/web-ui/src/redux/reducers/dataReducer.js",["291"],"import {\n  SET_TAB_NAVIGATION,\n  SET_SELECTED_GROUP,\n  SET_LOADING,\n  SET_CLASSES_IN_CHAT_TAB,\n  SET_NEW_MESSAGE,\n  SET_TYPING,\n  SET_CHOSEN_CLASS,\n  SET_ROOM_DETAIL_CHAT_TAB,\n  SET_DELETED_USER,\n  SET_DELETED_ROOM,\n  UPDATE_ROOM_AVATAR,\n  SET_SEEN_ROOMS,\n  SET_SEEN_MESSAGE,\n  SET_FILES_PROFILE_TAB,\n  SET_SEARCH_DATA,\n  SET_STAFF_DATA,\n  SET_NEW_USER_STAFF,\n  SET_USER_ONLINE,\n  SET_NEW_ROOM,\n  SET_CALL_VIDEO,\n  SET_MORE_MESSAGE,\n  SET_CLASS_SHOW_COLLAPSE,\n  SET_MORE_ROOMS,\n  SET_REPLY_TO_MESSAGE,\n  UPDATE_LIST_ROOM,\n} from \"../types\";\n\nvar initialState = {\n  tab: \"Profile\",\n  group: \"\",\n  loading: false,\n  newMessage: null,\n  typing: null,\n  class: \"\",\n  callVideoState: [],\n  roomDetailsChatTab: null,\n  deletedUserData: null,\n  searchData: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_TAB_NAVIGATION:\n      return {\n        ...state,\n        tab: action.payload,\n      };\n    case SET_SELECTED_GROUP:\n      return {\n        ...state,\n        group: action.payload,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case SET_CLASSES_IN_CHAT_TAB:\n      return {\n        ...state,\n        classesInChatTab: action.payload,\n      };\n    case SET_NEW_MESSAGE:\n      return {\n        ...state,\n        newMessage: action.payload,\n      };\n    case SET_TYPING:\n      return {\n        ...state,\n        typing: action.payload,\n      };\n    case SET_CHOSEN_CLASS:\n      return {\n        ...state,\n        class: action.payload,\n      };\n    case SET_DELETED_USER:\n      return {\n        ...state,\n        deletedUserData: action.payload,\n      };\n    case SET_ROOM_DETAIL_CHAT_TAB:\n      const room = action.payload.room;\n\n      var newState = state;\n\n      newState[`${room}`] = action.payload.data;\n\n      return newState;\n    case SET_DELETED_ROOM:\n      return {\n        ...state,\n        deletedRoom: action.payload,\n      };\n    case UPDATE_ROOM_AVATAR:\n      return {\n        ...state,\n        avatarRoom: action.payload,\n      };\n    case SET_SEEN_ROOMS:\n      return {\n        ...state,\n        seenRooms: action.payload,\n      };\n    case SET_SEEN_MESSAGE:\n      return {\n        ...state,\n        usersSeenMessage: action.payload,\n      };\n    case SET_FILES_PROFILE_TAB:\n      return {\n        ...state,\n        files: action.payload,\n      };\n    case SET_SEARCH_DATA:\n      return {\n        ...state,\n        searchData: action.payload,\n      };\n    case SET_STAFF_DATA:\n      return {\n        ...state,\n        staffData: action.payload,\n      };\n    case SET_NEW_USER_STAFF:\n      return {\n        ...state,\n        newUser: action.payload,\n      };\n    case SET_USER_ONLINE:\n      return {\n        ...state,\n        userOnline: action.payload,\n      };\n    case SET_NEW_ROOM:\n      return {\n        ...state,\n        newRoom: action.payload,\n      };\n    case SET_CALL_VIDEO:\n      if (state.callVideoState.length > 0) {\n        //Check room have been in the array and remove it from array\n        const roomArray = state.callVideoState.filter(\n          (item) => item.room !== action.payload.room\n        );\n\n        return {\n          ...state,\n          callVideoState: [...roomArray, action.payload],\n        };\n      } else {\n        return {\n          ...state,\n          callVideoState: [action.payload],\n        };\n      }\n    case SET_MORE_MESSAGE:\n      return {\n        ...state,\n        moreMessages: action.payload,\n      };\n    case SET_CLASS_SHOW_COLLAPSE:\n      return {\n        ...state,\n        classShowCollapse: action.payload,\n      };\n    case SET_MORE_ROOMS:\n      return {\n        ...state,\n        moreRooms: action.payload,\n      };\n    case SET_REPLY_TO_MESSAGE:\n      return {\n        ...state,\n        replyToMessage: action.payload,\n      };\n    case UPDATE_LIST_ROOM:\n      return {\n        ...state,\n        updateListRoom: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/home/user/Desktop/web-ui/src/components/ContentManage/Content.js",[],["292","293"],"/home/user/Desktop/web-ui/src/redux/actions/userAction.js",[],["294","295"],"/home/user/Desktop/web-ui/src/redux/actions/dataAction.js",[],["296","297"],"/home/user/Desktop/web-ui/src/components/ChatScreen/ChatHeader.js",["298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"/home/user/Desktop/web-ui/src/components/HeaderManage/DropdownMenu.js",["318","319"],"import React from \"react\";\n//Library\nimport {\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CImg,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n//Image\nimport userImage from \"../../assets/imgs/user_avatar.jpg\";\n//Icons\nimport profile from \"../../assets/icons/profile.png\";\nimport lock from \"../../assets/icons/lock.png\";\n//Redux\nimport { useSelector } from \"react-redux\";\n\nconst DropdownMenu = ({ openModal, handleLogout }) => {\n  //Redux\n  const userAvatar = useSelector((state) => state.user.info.avatar);\n\n  return (\n    <CDropdown inNav className=\"c-header-nav-items mx-2\" direction=\"down\">\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <div className=\"c-avatar\">\n          <CImg\n            src={userAvatar}\n            alt=\"admin@bootstrapmaster.com\"\n            width=\"36\"\n            height=\"36\"\n            style={{ borderRadius: \"50%\" }}\n          />\n        </div>\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownItem header tag=\"div\" color=\"light\" className=\"text-center\">\n          <strong>Settings</strong>\n        </CDropdownItem>\n        <CDropdownItem onClick={openModal}>\n          <CImg src={profile} height=\"15px\" className=\"mfe-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem divider />\n        <CDropdownItem onClick={handleLogout}>\n          <CImg src={lock} height=\"15px\" className=\"mfe-2\" />\n          Lock Account\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  );\n};\n\nexport default DropdownMenu;\n",["320","321"],"/home/user/Desktop/web-ui/src/components/ContentManage/Sessions.js",["322","323","324","325","326","327","328"],"import React, { useEffect, useState } from \"react\";\n//Components\nimport SelectSession from \"./Sessions/SelectSession/SelectSession\";\nimport AdminSession from \"./Sessions/AdminSession/AdminSession\";\nimport StaffSession from \"./Sessions/StaffSession/StaffSession\";\n//Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setLoading,\n  setStaffData,\n  setNewRoom,\n} from \"../../redux/actions/dataAction\";\n//Apollo\nimport { gql, useQuery, useSubscription } from \"@apollo/client\";\n\nconst GET_DATA = gql`\n  query GetData {\n    subjects {\n      name\n      terms {\n        name\n        classes {\n          rootRoom {\n            rooms {\n              name\n              messages {\n                content\n                createdAt\n              }\n              users {\n                email\n                status\n                createdAt\n              }\n              createdAt\n              avatar\n            }\n          }\n          name\n          users {\n            email\n            name\n            role\n            createdAt\n            avatar\n            status\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst USER_ONLINE = gql`\n  subscription {\n    userOnline {\n      email\n      status\n    }\n  }\n`;\n\nconst USER_OFFLINE = gql`\n  subscription {\n    userOffline {\n      email\n      status\n    }\n  }\n`;\n\nconst NEW_ROOM = gql`\n  subscription {\n    newRoom {\n      name\n      messages {\n        content\n        createdAt\n      }\n      users {\n        email\n        status\n        createdAt\n      }\n      createdAt\n      avatar\n      rootRoom {\n        name\n      }\n    }\n  }\n`;\n\nconst Sessions = () => {\n  //Redux\n  const dispatch = useDispatch();\n  const role = useSelector((state) => state.user.info.role);\n  const staffData = useSelector((state) => state.data.staffData);\n  const newUser = useSelector((state) => state.data.newUser);\n  const newRoom = useSelector((state) => state.data.newRoom);\n  //Variables\n  const [selectedSubject, setSelectedSubject] = useState();\n  const [selectedTerm, setSelectedTerm] = useState();\n  const [selectedClass, setSelectedClass] = useState();\n  const [classDetails, setClassDetails] = useState();\n  const [userChangeStatus, setUserChangeStatus] = useState();\n  //Apollo query\n  const { loading, error, data } = useQuery(GET_DATA);\n\n  useSubscription(USER_ONLINE, {\n    onSubscriptionData(data) {\n      setUserChangeStatus(data.subscriptionData.data.userOnline);\n    },\n  });\n\n  useSubscription(USER_OFFLINE, {\n    onSubscriptionData(data) {\n      setUserChangeStatus(data.subscriptionData.data.userOffline);\n    },\n  });\n\n  useSubscription(NEW_ROOM, {\n    onSubscriptionData(data) {\n      dispatch(setNewRoom(data.subscriptionData.data.newRoom));\n    },\n  });\n  //Methods\n\n  useEffect(() => {\n    if (newRoom) {\n      const subjectWithNewRoom = [];\n\n      for (var i = 0; i < staffData.subjects?.length; i++) {\n        const termWithNewRoom = [];\n\n        for (var j = 0; j < staffData.subjects[i].terms.length; j++) {\n          const classWithNewRoom = [];\n          for (\n            var k = 0;\n            k < staffData.subjects[i].terms[j].classes.length;\n            k++\n          ) {\n            if (\n              staffData.subjects[i].terms[j].classes[k].name ===\n              newRoom.rootRoom.name\n            ) {\n              classWithNewRoom.push({\n                rootRoom: {\n                  rooms: [\n                    newRoom,\n                    ...staffData.subjects[i].terms[j].classes[k].rootRoom.rooms,\n                  ],\n                },\n              });\n            } else {\n              classWithNewRoom.push(\n                staffData.subjects[i].terms[j].classes[k]\n              );\n            }\n          }\n          termWithNewRoom.push({\n            ...staffData.subjects[i].terms[j],\n            classes: classWithNewRoom,\n          });\n        }\n\n        subjectWithNewRoom.push({\n          ...staffData.subjects[i],\n          terms: termWithNewRoom,\n        });\n      }\n\n      dispatch(\n        setStaffData({\n          subjects: subjectWithNewRoom,\n        })\n      );\n    }\n  }, [newRoom]);\n\n  useEffect(() => {\n    if (newUser) {\n      const subjectWithUserChangeStatus = [];\n\n      for (var i = 0; i < staffData.subjects?.length; i++) {\n        const termWithUserChangeStatus = [];\n\n        for (var j = 0; j < staffData.subjects[i].terms.length; j++) {\n          const classWithUserChangeStatus = [];\n          for (\n            var k = 0;\n            k < staffData.subjects[i].terms[j].classes.length;\n            k++\n          ) {\n            const usersWithUserChangeStatus = [];\n            if (\n              newUser.classes.filter(\n                (classItem) =>\n                  staffData.subjects[i].terms[j].classes[k].name ===\n                  classItem.name\n              ).length > 0\n            ) {\n              usersWithUserChangeStatus.push(newUser);\n              for (\n                var l = 0;\n                l < staffData.subjects[i].terms[j].classes[k].users.length;\n                l++\n              ) {\n                usersWithUserChangeStatus.push(\n                  staffData.subjects[i].terms[j].classes[k].users[l]\n                );\n              }\n            } else {\n              for (\n                var l = 0;\n                l < staffData.subjects[i].terms[j].classes[k].users.length;\n                l++\n              ) {\n                usersWithUserChangeStatus.push(\n                  staffData.subjects[i].terms[j].classes[k].users[l]\n                );\n              }\n            }\n\n            classWithUserChangeStatus.push({\n              ...staffData.subjects[i].terms[j].classes[k],\n              users: usersWithUserChangeStatus,\n            });\n          }\n          termWithUserChangeStatus.push({\n            ...staffData.subjects[i].terms[j],\n            classes: classWithUserChangeStatus,\n          });\n        }\n\n        subjectWithUserChangeStatus.push({\n          ...staffData.subjects[i],\n          terms: termWithUserChangeStatus,\n        });\n      }\n\n      dispatch(\n        setStaffData({\n          subjects: subjectWithUserChangeStatus,\n        })\n      );\n    }\n  }, [newUser]);\n\n  useEffect(() => {\n    //Update data when user changes status\n    if (userChangeStatus && staffData) {\n      const subjectWithUserChangeStatus = [];\n\n      for (var i = 0; i < staffData.subjects?.length; i++) {\n        const termWithUserChangeStatus = [];\n\n        for (var j = 0; j < staffData.subjects[i].terms.length; j++) {\n          const classWithUserChangeStatus = [];\n          for (\n            var k = 0;\n            k < staffData.subjects[i].terms[j].classes.length;\n            k++\n          ) {\n            const usersWithUserChangeStatus = [];\n            for (\n              var l = 0;\n              l < staffData.subjects[i].terms[j].classes[k].users.length;\n              l++\n            ) {\n              if (\n                staffData.subjects[i].terms[j].classes[k].users[l].email ===\n                userChangeStatus.email\n              ) {\n                usersWithUserChangeStatus.push({\n                  ...staffData.subjects[i].terms[j].classes[k].users[l],\n                  status: userChangeStatus.status,\n                });\n              } else {\n                usersWithUserChangeStatus.push(\n                  staffData.subjects[i].terms[j].classes[k].users[l]\n                );\n              }\n            }\n            classWithUserChangeStatus.push({\n              ...staffData.subjects[i].terms[j].classes[k],\n              users: usersWithUserChangeStatus,\n            });\n          }\n          termWithUserChangeStatus.push({\n            ...staffData.subjects[i].terms[j],\n            classes: classWithUserChangeStatus,\n          });\n        }\n\n        subjectWithUserChangeStatus.push({\n          ...staffData.subjects[i],\n          terms: termWithUserChangeStatus,\n        });\n      }\n\n      dispatch(\n        setStaffData({\n          subjects: subjectWithUserChangeStatus,\n        })\n      );\n    }\n  }, [userChangeStatus]);\n\n  useEffect(() => {\n    //Set loading to get data\n    dispatch(setLoading(loading));\n\n    if (!loading && data) {\n      dispatch(setStaffData(data));\n    }\n  }, [loading]);\n\n  useEffect(() => {\n    if (staffData) {\n    }\n  }, [staffData]);\n\n  const showRightArrow = (object, type) => {\n    const right_arrows = document.getElementsByClassName(`right_arrow_${type}`);\n    for (var i = 0; i < right_arrows.length; i++) {\n      if (right_arrows[i].id === `right_arrow_${object}`) {\n        right_arrows[i].className += \" show\";\n      } else {\n        right_arrows[i].className = `right_arrow_${type}`;\n      }\n    }\n  };\n\n  const selectSubject = (subject) => {\n    if (subject !== selectedSubject) {\n      showRightArrow(subject, \"subject\");\n\n      setSelectedTerm();\n      setSelectedClass();\n      setSelectedSubject(subject);\n    }\n  };\n\n  const selectTerm = (term) => {\n    if (term !== selectedTerm) {\n      showRightArrow(term, \"term\");\n      setSelectedClass();\n      setSelectedTerm(term);\n    }\n  };\n\n  const selectClass = (classItem) => {\n    showRightArrow(classItem, \"class\");\n    setSelectedClass(classItem);\n  };\n\n  const openClassDetails = (classDetails) => {\n    setClassDetails(classDetails);\n  };\n\n  return (\n    <>\n      <SelectSession\n        selectedTerm={selectedTerm}\n        selectedSubject={selectedSubject}\n        data={staffData ? staffData.subjects : []}\n        selectedClass={selectedClass}\n        selectSubject={selectSubject}\n        selectTerm={selectTerm}\n        selectClass={selectClass}\n        openClassDetails={openClassDetails}\n      />\n      {role && (\n        <>\n          {role === \"staff\" ? (\n            <>{classDetails && <StaffSession classDetails={classDetails} />}</>\n          ) : (\n            <>{classDetails && <AdminSession classDetails={classDetails} />}</>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Sessions;\n","/home/user/Desktop/web-ui/src/funcs/utf8.js",[],"/home/user/Desktop/web-ui/src/components/GroupInfo/MemberItem.js",["329","330","331"],"import React from \"react\";\n//Icons\nimport trash from \"../../assets/icons/trash.png\";\n//Library\nimport Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\n//Components\nimport EditGroupsModal from \"../EditGroupsModal/EditGroupsModal\";\n//Redux\nimport { useSelector } from \"react-redux\";\n\nconst MemberItem = ({ member, room }) => {\n  //Redux\n  const email = useSelector((state) => state.user.info.email);\n\n  return (\n    <div className=\"card_content\">\n      <div className=\"member_avatar\">\n        <img src={member.avatar} />\n      </div>\n      <div className=\"content\">\n        <div>\n          <h5>{member.email}</h5>\n        </div>\n      </div>\n      {member.email !== email && (\n        <a href=\"#\" className=\"action\">\n          <Popup\n            trigger={<img src={trash} />}\n            position=\"right center\"\n            modal\n            nested\n          >\n            {(close) => (\n              <EditGroupsModal\n                type=\"delete\"\n                closeModal={close}\n                deleteData={{\n                  target: \"user\",\n                  room: room,\n                  users: [member.email],\n                }}\n              />\n            )}\n          </Popup>\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default MemberItem;\n",["332","333"],"/home/user/Desktop/web-ui/src/components/ChatScreen/ChatArea/Message.js",["334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],"/home/user/Desktop/web-ui/src/components/Tabs/ChatTab/ChatTab.js",["358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385"],"/home/user/Desktop/web-ui/src/funcs/fileSizeCal.js",[],"/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/SelectSession/SelectSession.js",[],["386","387"],"/home/user/Desktop/web-ui/src/components/EditGroupsModal/Tabs/Delete.js",["388","389","390","391"],"import React, { useEffect, useState } from \"react\";\n//Apollo\nimport { gql, useMutation } from \"@apollo/client\";\n//Toast\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\n//Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setLoading,\n  setDeletedUser,\n  setDeletedRoom,\n} from \"../../../redux/actions/dataAction\";\n//Const\nimport {\n  DELETE_USER_SUCCESS,\n  DELETE_MESSAGE_SUCCESS,\n} from \"../../../const/string\";\n\nconst DELETE_ROOM = gql`\n  mutation($name: String!, $whoDeleted: String!) {\n    deleteRoom(name: $name, whoDeleted: $whoDeleted)\n  }\n`;\n\nconst REMOVE_USERS_FROM_ROOM = gql`\n  mutation($room: String!, $users: [String!]!) {\n    removeUsersFromRoom(room: $room, users: $users) {\n      users {\n        _id\n        email\n        avatar\n      }\n    }\n  }\n`;\n\nconst DELETE_MESSAGE = gql`\n  mutation($message: ID!) {\n    deleteMessage(message: $message)\n  }\n`;\n\nconst Delete = ({ deleteData, closeModal }) => {\n  //Redux\n  const dispatch = useDispatch();\n  const email = useSelector((state) => state.user.info.email);\n  //Apollo\n  const [deleteRoom, deleteRoomProps] = useMutation(DELETE_ROOM, {\n    onCompleted(data) {\n      notifySuccess(data.deleteRoom);\n\n      dispatch(setDeletedRoom(deleteData.name));\n\n      closeModal();\n    },\n    onError(err) {\n      console.log(err);\n      notifyError(err.message);\n    },\n  });\n\n  const [removeUsersFromRoom, removeUsersFromRoomProps] = useMutation(\n    REMOVE_USERS_FROM_ROOM,\n    {\n      onCompleted(data) {\n        notifySuccess(DELETE_USER_SUCCESS);\n\n        dispatch(\n          setDeletedUser({\n            room: deleteData.room,\n            users: data.removeUsersFromRoom.users,\n          })\n        );\n\n        closeModal();\n      },\n      onError(err) {\n        console.log(err);\n        notifyError(err.message);\n      },\n    }\n  );\n\n  const [deleteMessage, deleteMessageProps] = useMutation(DELETE_MESSAGE, {\n    onCompleted(data) {\n      notifySuccess(DELETE_MESSAGE_SUCCESS);\n\n      closeModal();\n    },\n    onError(err) {\n      notifyError(err.message);\n    },\n  });\n\n  //Methods\n  useEffect(() => {\n    dispatch(setLoading(deleteMessageProps.loading));\n  }, [deleteMessageProps.loading]);\n\n  useEffect(() => {\n    dispatch(setLoading(deleteRoomProps.loading));\n  }, [deleteRoomProps.loading]);\n\n  useEffect(() => {\n    dispatch(setLoading(removeUsersFromRoomProps.loading));\n  }, [removeUsersFromRoomProps.loading]);\n\n  const handleYes = (e) => {\n    e.preventDefault();\n    if (deleteData.target === \"room\") {\n      deleteRoom({ variables: { name: deleteData.name, whoDeleted: email } });\n    } else if (deleteData.target === \"message\") {\n      deleteMessage({ variables: { message: deleteData.messageId } });\n    } else {\n      removeUsersFromRoom({\n        variables: {\n          room: deleteData.room,\n          users: deleteData.users,\n        },\n      });\n    }\n  };\n\n  const handleNo = (e) => {\n    e.preventDefault();\n    closeModal();\n  };\n\n  return (\n    <div>\n      <div className=\"button_group\">\n        <button type=\"button\" className=\"btn_yes\" onClick={handleYes}>\n          Yes\n        </button>\n        <button type=\"button\" className=\"btn_no\" onClick={handleNo}>\n          No\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Delete;\n","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/SelectSession/Card.js",[],"/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/AdminSession/MainChart.js",["392","393"],"import React from \"react\";\n//Library\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle, hexToRgba } from \"@coreui/utils\";\n//Logic\nimport { compareTwoDate } from \"../../../../funcs/formatDate\";\n\nconst brandInfo = getStyle(\"info\") || \"#20a8d8\";\n\nconst MainChart = (attributes) => {\n  const classDetails = attributes.classDetails;\n\n  const filterMessageBasedDate = () => {\n    const dateArray = [];\n    const messageArray = {};\n    //Filter date\n    for (var i = 0; i < classDetails.rootRoom.rooms.length; i++) {\n      for (var j = 0; j < classDetails.rootRoom.rooms[i].messages.length; j++) {\n        if (\n          dateArray.indexOf(\n            new Date(\n              classDetails.rootRoom.rooms[i].messages[j].createdAt\n            ).toDateString()\n          ) === -1\n        ) {\n          dateArray.push(\n            new Date(\n              classDetails.rootRoom.rooms[i].messages[j].createdAt\n            ).toDateString()\n          );\n        }\n      }\n    }\n\n    //Filter message\n    for (var i = 0; i < classDetails.rootRoom.rooms.length; i++) {\n      for (var j = 0; j < dateArray.length; j++) {\n        if (!messageArray[`${dateArray[j]}`]) {\n          messageArray[`${dateArray[j]}`] = 0;\n        }\n        for (\n          var k = 0;\n          k < classDetails.rootRoom.rooms[i].messages.length;\n          k++\n        ) {\n          if (\n            compareTwoDate(\n              classDetails.rootRoom.rooms[i].messages[k].createdAt,\n              dateArray[j]\n            )\n          ) {\n            messageArray[`${dateArray[j]}`] =\n              messageArray[`${dateArray[j]}`] + 1;\n          }\n        }\n      }\n    }\n\n    return {\n      dateArray,\n      messageArray,\n    };\n  };\n  const filterResult = filterMessageBasedDate();\n\n  const defaultDatasets = (() => {\n    const length = filterResult.dateArray.length;\n\n    const data1 = [];\n\n    for (let i = 0; i < length; i++) {\n      data1.push(filterResult.messageArray[`${filterResult.dateArray[i]}`]);\n    }\n    return [\n      {\n        label: \"Sended messages in the day\",\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data1,\n      },\n    ];\n  })();\n\n  const defaultOptions = (() => {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              drawOnChartArea: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 250,\n            },\n            gridLines: {\n              display: true,\n            },\n          },\n        ],\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3,\n        },\n      },\n    };\n  })();\n\n  // render\n  return (\n    <CChartLine\n      className=\"main_chart\"\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={filterResult.dateArray}\n    />\n  );\n};\n\nexport default MainChart;\n","/home/user/Desktop/web-ui/src/funcs/validation.js",[],"/home/user/Desktop/web-ui/src/components/GroupInfo/GroupInfo.js",["394","395","396","397","398","399","400","401","402","403","404","405","406","407","408"],"/home/user/Desktop/web-ui/src/apollo/apolloProvider.js",["409"],"/home/user/Desktop/web-ui/src/components/EditGroupsModal/EditGroupsModal.js",["410"],"/home/user/Desktop/web-ui/src/components/EditGroupsModal/Tabs/Update.js",["411","412","413","414"],"/home/user/Desktop/web-ui/src/const/string.js",[],"/home/user/Desktop/web-ui/src/pages/Chat/Chat.js",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437"],"/home/user/Desktop/web-ui/src/components/Tabs/ChatTab/ChatDropDown.js",["438","439","440","441","442","443","444","445","446","447","448","449","450"],"/home/user/Desktop/web-ui/src/components/NavigationTabs/NavigationTabs.js",[],"/home/user/Desktop/web-ui/src/components/Tabs/SwitchTab.js",[],"/home/user/Desktop/web-ui/src/components/NavigationTabs/NavigationTab.js",["451","452","453"],"import React, { useEffect } from \"react\";\n//Redux\nimport { useDispatch } from \"react-redux\";\nimport { setTabNavigation } from \"../../redux/actions/dataAction\";\n\nconst TabNavigation = ({ name, icon, selectedTab, selectedIcon }) => {\n  const dispatch = useDispatch();\n\n  //Switch tab\n  useEffect(() => {\n    if (name === selectedTab) {\n      handlecChosenTab();\n    }\n  }, [selectedTab]);\n\n  const handlecChosenTab = () => {\n    const tabs = document.getElementsByClassName(\"li_tab_a\");\n    for (var i = 0; i < tabs.length; i++) {\n      if (tabs[i].id === name) {\n        dispatch(setTabNavigation(name));\n        tabs[i].className += \" active\";\n\n        tabs[i].children[0].src = selectedIcon;\n      } else {\n        tabs[i].className = \"li_tab_a\";\n        tabs[i].children[0].src = tabs[i].children[0].id;\n      }\n    }\n  };\n\n  return (\n    <a id={name} className=\"li_tab_a\" onClick={handlecChosenTab}>\n      <img className=\"li_tab_a_img\" id={icon} src={icon} />\n    </a>\n  );\n};\n\nexport default TabNavigation;\n","/home/user/Desktop/web-ui/src/components/Tabs/ProfileTab/ProfileTab.js",["454","455","456","457","458","459","460","461","462","463","464"],"import React, { useEffect, useState } from \"react\";\n//Library\nimport GridLoader from \"react-spinners/GridLoader\";\nimport LoadingOverlay from \"react-loading-overlay\";\n//Icons\nimport about_icon from \"../../../assets/icons/about.png\";\nimport attachment from \"../../../assets/icons/paperclip.png\";\nimport open from \"../../../assets/icons/right-arrow.png\";\nimport close from \"../../../assets/icons/up-arrow.png\";\nimport close_x from \"../../../assets/icons/close.png\";\nimport online from \"../../../assets/icons/online.png\";\n//Components\nimport UploadedFile from \"./UploadedFile\";\n//Redux\nimport { useSelector } from \"react-redux\";\n\nconst files = [\n  {\n    name: \"File 1\",\n    size: \"12MB\",\n    type: \"file\",\n  },\n  {\n    name: \"File 2\",\n    size: \"5MB\",\n    type: \"image\",\n  },\n  {\n    name: \"File 3\",\n    size: \"10MB\",\n    type: \"video\",\n  },\n];\n\nconst ProfileTab = ({ closeSlidebar }) => {\n  //Redux\n  const user = useSelector((state) => {\n    return {\n      name: state.user.info.name,\n      email: state.user.info.email,\n      avatar: state.user.info.avatar,\n    };\n  });\n  const files = useSelector((state) => state.data.files);\n  //Variables\n  const [collapse, setCollapse] = useState({\n    first: true,\n    second: false,\n  });\n\n  //Hook\n  useEffect(() => {\n    const collapseElements = document.getElementsByClassName(\"collapse\");\n\n    collapseElements[0].className += \" show\";\n  }, []);\n\n  //Methods\n  const handleShowFirstCollapse = (event) => {\n    const collapseElements = document.getElementsByClassName(\"collapse\");\n\n    for (var i = 0; i < collapseElements.length; i++) {\n      if (collapseElements[i].id === \"first_collapse\") {\n        if (collapseElements[i].className.includes(\"show\")) {\n          collapseElements[i].className = \"collapse\";\n        } else {\n          collapseElements[i].className += \" show\";\n        }\n      }\n      setCollapse({\n        ...collapse,\n        first: !collapse.first,\n      });\n    }\n  };\n\n  const handleShowSecondCollapse = (event) => {\n    const collapseElements = document.getElementsByClassName(\"collapse\");\n\n    for (var i = 0; i < collapseElements.length; i++) {\n      if (collapseElements[i].id === \"second_collapse\") {\n        if (collapseElements[i].className.includes(\"show\")) {\n          collapseElements[i].className = \"collapse\";\n        } else {\n          collapseElements[i].className += \" show\";\n        }\n      }\n\n      setCollapse({\n        ...collapse,\n        second: !collapse.second,\n      });\n    }\n  };\n\n  return (\n    <div className=\"tab_content\">\n      <div className=\"tab_content_header\">\n        <h4>My Profile</h4>\n        <div className=\"float_right_dropdown\">\n          <div className=\"dropdown\">\n            <a href=\"#\">\n              {closeSlidebar && <img src={close_x} onClick={closeSlidebar} />}\n            </a>\n            <div className=\"dropdown_menu\"></div>\n          </div>\n        </div>\n      </div>\n      <div className=\"user_session\">\n        <div className=\"user_session_image\">\n          <img src={user.avatar} />\n        </div>\n        <div className=\"user_session_name\">{user.name}</div>\n        <div className=\"user_session_state\">\n          <img src={online} /> Active\n        </div>\n      </div>\n      <div className=\"profile_content\">\n        <div className=\"description\">\n          <p>\n            If several languages coalesce, the grammar of the resulting language\n            is more simple and regular than that of the individual.\n          </p>\n        </div>\n        <div className=\"accordion\">\n          <div className=\"card\">\n            <a href=\"#\" onClick={handleShowFirstCollapse}>\n              <div>\n                <div>\n                  <img src={about_icon} className=\"about_icon\" />\n                  <span>About</span>\n                </div>\n                <img\n                  src={collapse.first ? open : close}\n                  className=\"open_close_icon\"\n                />\n              </div>\n            </a>\n            <div className=\"collapse\" id=\"first_collapse\">\n              <div className=\"card_body\">\n                <div>\n                  <p>Name</p>\n                  <h5>{user.name}</h5>\n                </div>\n                <div>\n                  <p>Email</p>\n                  <h5>{user.email}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card\">\n            <a href=\"#\" onClick={handleShowSecondCollapse}>\n              <div>\n                <div>\n                  <img src={attachment} className=\"attachment\" />\n                  <span>Uploaded Files</span>\n                </div>\n                <img\n                  src={collapse.second ? open : close}\n                  className=\"open_close_icon\"\n                />\n              </div>\n            </a>\n            <div className=\"collapse\" id=\"second_collapse\">\n              <div className=\"card_body\">\n                {files && files.length > 0 ? (\n                  files.map((file, index) => (\n                    <span key={index}>\n                      <UploadedFile file={file} />\n                    </span>\n                  ))\n                ) : (\n                  <LoadingOverlay\n                    className=\"loading_overlay_container\"\n                    active={true}\n                    spinner={<GridLoader color=\"silver\" />}\n                  ></LoadingOverlay>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileTab;\n","/home/user/Desktop/web-ui/src/components/Tabs/ProfileTab/UploadedFile.js",["465","466","467","468"],"/home/user/Desktop/web-ui/src/components/EditGroupsModal/Tabs/Create.js",["469","470","471","472","473","474"],"import React, { useEffect, useState } from \"react\";\n//Library\nimport TextInput from \"react-autocomplete-input\";\nimport \"react-autocomplete-input/dist/bundle.css\";\n//Apollo\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\n//Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading } from \"../../../redux/actions/dataAction\";\n//Toast\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\n//Const\nimport {\n  FIELD_REQUIRED,\n  CREATE_ROOM_SUCCESS,\n  START_A_NEW_ROOM,\n  CREATE_MESSAGE_SUCCESS,\n} from \"../../../const/string\";\n//Logic\nimport { encode } from \"../../../funcs/utf8\";\n\nconst GET_CLASS = gql`\n  query($name: String!) {\n    class(name: $name) {\n      users {\n        email\n      }\n    }\n  }\n`;\n\nconst UPLOAD_AVATAR = gql`\n  mutation($file: Upload!, $idOrEmail: String!, $messageOrUser: String!) {\n    uploadFile(\n      file: $file\n      idOrEmail: $idOrEmail\n      messageOrUser: $messageOrUser\n    ) {\n      filename\n      mimetype\n      encoding\n      url\n    }\n  }\n`;\n\nconst CREATE_ROOM = gql`\n  mutation(\n    $name: String!\n    $description: String\n    $rootRoom: String!\n    $users: [String!]\n    $avatar: String\n    $whoCreated: String!\n  ) {\n    createRoom(\n      name: $name\n      description: $description\n      rootRoom: $rootRoom\n      users: $users\n      avatar: $avatar\n      whoCreated: $whoCreated\n    ) {\n      name\n    }\n  }\n`;\n\nconst CREATE_MESSAGE = gql`\n  mutation($content: String!, $room: String!) {\n    createMessage(content: $content, room: $room) {\n      _id\n      content\n      createdAt\n    }\n  }\n`;\n\nconst Create = ({ className, closeModal }) => {\n  //Redux\n  const dispatch = useDispatch();\n  const email = useSelector((state) => state.user.info.email);\n  //Variables\n  const [listStudents, setListStudents] = useState([]);\n  const [newRoom, setNewRoom] = useState();\n  const [urlAvatar, setUrlAvatar] = useState();\n  //Apollo query\n  const { loading, error, data } = useQuery(GET_CLASS, {\n    variables: { name: className },\n  });\n  //Apollo mutation\n  const [uploadFile, updateAvatarPros] = useMutation(UPLOAD_AVATAR, {\n    update(_, res) {},\n    onCompleted(data) {\n      const avatarUrl = data.uploadFile.url;\n      setUrlAvatar(avatarUrl);\n    },\n    onError(err) {\n      notifyError(err.message);\n    },\n  });\n\n  const [createMessage, createMessageProps] = useMutation(CREATE_MESSAGE, {\n    onCompleted(data) {\n      notifySuccess(CREATE_MESSAGE_SUCCESS);\n    },\n    onError(err) {\n      notifyError(err.message);\n    },\n  });\n\n  const [createRoom, createRoomPros] = useMutation(CREATE_ROOM, {\n    update(_, res) {},\n    onCompleted(data) {\n      notifySuccess(CREATE_ROOM_SUCCESS);\n\n      createMessage({\n        variables: { content: encode(START_A_NEW_ROOM), room: newRoom.name },\n      });\n\n      closeModal();\n    },\n    onError(err) {\n      console.log(err);\n      notifyError(err.message);\n    },\n  });\n  //Methods\n\n  useEffect(() => {\n    dispatch(setLoading(loading));\n\n    //Set list of student in the class\n    if (data) {\n      var arrayEmail = [];\n\n      for (var i = 0; i < data.class.users.length; i++) {\n        if (data.class.users[i].email !== email) {\n          arrayEmail.push(data.class.users[i].email);\n        }\n      }\n\n      setListStudents(arrayEmail);\n    }\n  }, [loading]);\n\n  useEffect(() => {\n    dispatch(setLoading(updateAvatarPros.loading));\n  }, [updateAvatarPros.loading]);\n\n  useEffect(() => {\n    dispatch(setLoading(createRoomPros.loading));\n  }, [createRoomPros.loading]);\n\n  useEffect(() => {\n    //Create room when avatar is uploaded\n    if (urlAvatar) {\n      createRoom({\n        variables: {\n          name: newRoom.name,\n          description: \"\",\n          rootRoom: className,\n          users: newRoom.arrayEmail,\n          avatar: urlAvatar,\n          whoCreated: email,\n        },\n      });\n    }\n  }, [urlAvatar]);\n\n  const handleCreate = (e) => {\n    e.preventDefault();\n\n    const list_students = document\n      .getElementsByClassName(\"list_students\")[0]\n      .value.trim();\n    const new_name = document\n      .getElementsByClassName(\"new_name\")[0]\n      .value.trim();\n\n    if (listStudents && new_name && newRoom?.avatar) {\n      const userInGroup = [email];\n\n      var arrayUsersInput = list_students.split(\" \");\n\n      //Filter to get unique email\n      for (var i = 0; i < arrayUsersInput.length; i++) {\n        if (userInGroup.indexOf(arrayUsersInput[i]) === -1) {\n          userInGroup.push(arrayUsersInput[i]);\n        }\n      }\n      setNewRoom({\n        ...newRoom,\n        name: new_name,\n        arrayEmail: userInGroup,\n      });\n      //Upload avatar\n      uploadFile({\n        variables: {\n          file: newRoom.avatar,\n          idOrEmail: newRoom.name,\n          messageOrUser: \"\",\n        },\n      });\n    } else {\n      notifyError(FIELD_REQUIRED);\n    }\n  };\n\n  const handleAvatar = (e) => {\n    setNewRoom({\n      avatar: e.target.files[0],\n    });\n  };\n\n  const handleKeyPressListEmail = (e) => {\n    //Prevent all key from inputting in field, except of space\n    if (e.key !== \" \") {\n      e.preventDefault();\n    }\n  };\n\n  return (\n    <div className=\"create_container\">\n      <form\n        onKeyPress={(event) => {\n          if(event.key === \"Enter\") {\n            event.preventDefault();\n          }\n        }}\n      >\n        <div className=\"group_name\">\n          <label htmlFor=\"group_name\">New group</label>\n          <input\n            name=\"group_name\"\n            type=\"text\"\n            placeholder=\"Your group name\"\n            className=\"new_name\"\n          />\n        </div>\n        <div className=\"group_members\">\n          <label htmlFor=\"group_members\">Student list</label>\n          <TextInput\n            placeholder=\"Type space to show list\"\n            trigger=\" \"\n            options={listStudents}\n            className=\"list_students\"\n            spacer=\"\"\n            id=\"group_members\"\n            onKeyPress={handleKeyPressListEmail}\n          />\n        </div>\n        <div className=\"group_avatar\">\n          <label htmlFor=\"avatar\">Group avatar</label>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            id=\"avatar\"\n            className=\"avatar\"\n            onChange={handleAvatar}\n          />\n        </div>\n        <button type=\"button\" onClick={handleCreate}>\n          Create\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n","/home/user/Desktop/web-ui/src/index.js",[],"/home/user/Desktop/web-ui/src/pages/Error/Error.js",[],"/home/user/Desktop/web-ui/src/components/FooterManage/Footer.js",[],"/home/user/Desktop/web-ui/src/components/NavigationAvatar/NavigationAvatar.js",["475","476","477","478"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n//Library\nimport useOnclickOutside from \"react-cool-onclickoutside\";\n//Icon\nimport user_avatar from \"../../assets/imgs/user_avatar.jpg\";\n//Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLogout } from \"../../redux/actions/userAction\";\n// Apollo\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst LOGOUT = gql`\n  mutation Logout($email: String!) {\n    logout(email: $email) {\n      status\n    }\n  }\n`;\n\nfunction NavigationAvatar() {\n  const history = useHistory();\n  //Redux\n  const dispatch = useDispatch();\n  const email = useSelector((state) => state.user.info.email);\n  const avatar = useSelector((state) => state.user.info.avatar);\n  //Apollo\n  const [logout] = useMutation(LOGOUT);\n  //Variables\n  const [show, setShow] = useState(false);\n  //Methods\n  const ref = useOnclickOutside(() => {\n    setShow(false);\n  });\n\n  const handleOpenDropdownMenu = (e) => {\n    e.preventDefault();\n\n    setShow(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    //Set logout redux\n    dispatch(setLogout());\n    //Set logout status on database\n    logout({ variables: { email } });\n    history.push(\"/login\");\n  };\n\n  return (\n    <div className=\"user_avatar\">\n      <a href=\"#\" onClick={handleOpenDropdownMenu}>\n        <img src={avatar} />\n      </a>\n\n      <div className={show ? \"dropdown_menu show\" : \"dropdown_menu\"} ref={ref}>\n        <a href=\"\" onClick={handleLogout}>\n          Log out <span>↳</span>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default NavigationAvatar;\n","/home/user/Desktop/web-ui/src/components/ChatScreen/ChatInput.js",["479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495"],"/home/user/Desktop/web-ui/src/const/tabs.js",[],"/home/user/Desktop/web-ui/src/components/HeaderManage/ModalProfile.js",["496","497","498","499"],"/home/user/Desktop/web-ui/src/components/CallRealTime/CallVideo.js",["500","501","502","503","504"],"import React, { useEffect, useState } from \"react\";\n//Apollo\nimport { gql, useMutation, useSubscription } from \"@apollo/client\";\n//Library\nimport Peer from \"peerjs\";\n//Const\nimport {\n  CALLING_VIDEO,\n  STOP_CALL_VIDEO,\n  CALLING_VOICE,\n  STOP_CALL_VOICE,\n} from \"../../const/string\";\n//Toast\nimport { notifyError } from \"../../utils/toast\";\n//Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading, setUpdateListRoom } from \"../../redux/actions/dataAction\";\n\nconst USER_JOIN_ROOM = gql`\n  mutation($room: String, $userId: String) {\n    userJoinRoom(room: $room, userId: $userId)\n  }\n`;\n\nconst USER_OUT_ROOM = gql`\n  mutation($room: String, $userId: String) {\n    userOutRoom(room: $room, userId: $userId)\n  }\n`;\n\nconst JOIN_ROOM = gql`\n  subscription {\n    joinRoom {\n      room\n      userId\n    }\n  }\n`;\nconst OUT_ROOM = gql`\n  subscription {\n    outRoom {\n      room\n      userId\n    }\n  }\n`;\n\nconst CREATE_MESSAGE = gql`\n  mutation($content: String!, $room: String!) {\n    createMessage(content: $content, room: $room) {\n      _id\n      content\n      createdAt\n    }\n  }\n`;\n\nconst peers = {};\nvar numberUser = [];\n\nconst myVideo = document.createElement(\"video\");\nmyVideo.controls = true;\nmyVideo.id = \"own\";\n\nconst CallVideo = ({ roomName, close, type }) => {\n  //Redux\n  const dispatch = useDispatch();\n  const callVideoState = useSelector((state) => state.data.callVideoState);\n  //Apollo\n  const [createMessage, createMessageProps] = useMutation(CREATE_MESSAGE, {\n    onError(err) {\n      close();\n      notifyError(err.message);\n    },\n  });\n\n  const [userJoinRoom, props] = useMutation(USER_JOIN_ROOM, {\n    onCompleted() {\n      if (\n        typeof callVideoState === \"object\" &&\n        callVideoState.length !== undefined\n      ) {\n        if (callVideoState.length > 0) {\n          const roomIsCalling = callVideoState.filter(\n            (item) => item.room === roomName\n          );\n          console.log(callVideoState);\n          //Check whether that user is operating the call video\n          if (roomIsCalling.length === 0 || !roomIsCalling[0].callState) {\n            createMessage({\n              variables: {\n                room: roomName,\n                content: type === \"voice\" ? CALLING_VOICE : CALLING_VIDEO,\n              },\n            });\n            dispatch(setUpdateListRoom(true));\n          }\n        } else {\n          createMessage({\n            variables: {\n              room: roomName,\n              content: type === \"voice\" ? CALLING_VOICE : CALLING_VIDEO,\n            },\n          });\n          dispatch(setUpdateListRoom(true));\n        }\n      }\n    },\n    onError(err) {\n      console.log(err.message);\n    },\n  });\n  const [userOutRoom, props1] = useMutation(USER_OUT_ROOM, {\n    onError(err) {\n      console.log(err.message);\n    },\n  });\n\n  useSubscription(JOIN_ROOM, {\n    onSubscriptionData(data) {\n      console.log(\"user join room\", data);\n      if (stream) {\n        console.log(1);\n        // localStorage.setItem(\"lastUser\", true);\n        connectToNewUser(data.subscriptionData.data.joinRoom.userId, stream);\n      }\n    },\n  });\n\n  useSubscription(OUT_ROOM, {\n    onSubscriptionData(data) {\n      try {\n        const userId = data.subscriptionData.data.outRoom.userId;\n        console.log(\"User out room\", userId);\n\n        numberUser = numberUser.filter((item) => item !== userId);\n\n        if (peers[userId]) peers[userId].close();\n        calUsersJoin();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  });\n  //Variables\n  const [stream, setStream] = useState();\n  const [myPeer, setMyPeer] = useState();\n  const [numberOfUser, setNumberOfUser] = useState(0);\n  //Methods\n  useEffect(() => {\n    dispatch(setLoading(createMessageProps.loading));\n  }, [createMessageProps.loading]);\n\n  useEffect(() => {\n    var peer = new Peer();\n    setMyPeer(peer);\n\n    dispatch(setUpdateListRoom())\n\n    return () => {\n      try {\n        const userId = localStorage.getItem(\"userId\");\n        // const lastUser = localStorage.getItem(\"lastUser\");\n\n        if (numberUser.length === 1 || numberUser.length === 0) {\n          // localStorage.setItem(\"lastUser\", true);\n          numberUser = [];\n        } else {\n          numberUser = numberUser.filter((item) => item !== userId);\n        }\n\n        //If no video in grid\n        if (numberUser.length === 1 || numberUser.length === 0) {\n          createMessage({\n            variables: {\n              room: roomName,\n              content: type === \"voice\" ? STOP_CALL_VOICE : STOP_CALL_VIDEO,\n            },\n          });\n          dispatch(setUpdateListRoom(true));\n        }\n\n        userOutRoom({ variables: { userId, room: roomName } });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (myPeer) {\n      myPeer.on(\"open\", (id) => {\n        userJoinRoom({\n          variables: { room: roomName, userId: id },\n        });\n\n        localStorage.setItem(\"userId\", id);\n      });\n\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((newStream) => {\n          if (myVideo.srcObject !== null) {\n            myVideo.srcObject = null;\n          }\n\n          if (type === \"voice\") {\n            // Stop only video\n            newStream.getVideoTracks()[0].enabled = false;\n          } else {\n            // Stop video and voice\n            myVideo.addEventListener(\"pause\", () => {\n              newStream.getTracks().forEach((track) => (track.enabled = false));\n            });\n\n            // Continue video and voice\n            myVideo.addEventListener(\"play\", () => {\n              newStream.getTracks().forEach((track) => (track.enabled = true));\n            });\n          }\n\n          myVideo.addEventListener(\"volumechange\", (e) => {\n            if (!myVideo.muted) {\n              newStream\n                .getAudioTracks()\n                .forEach((track) => (track.enabled = true));\n            } else {\n              newStream\n                .getAudioTracks()\n                .forEach((track) => (track.enabled = false));\n            }\n          });\n\n          addVideoStream(myVideo, newStream);\n          calUsersJoin();\n          console.log(\"add my video\");\n\n          myPeer.on(\"call\", (call) => {\n            console.log(\"peer on call\");\n            call.answer(newStream);\n            const video = document.createElement(\"video\");\n            video.id = call.peer;\n            call.on(\"stream\", (userVideoStream) => {\n              console.log(\"on stream on call\", userVideoStream);\n              console.log(3);\n              // localStorage.setItem(\"lastUser\", false);\n              addVideoStream(video, userVideoStream);\n              calUsersJoin();\n            });\n          });\n\n          setStream(newStream);\n        });\n    }\n  }, [myPeer]);\n\n  const connectToNewUser = (userId, stream) => {\n    console.log(\"call\", stream);\n    const call = myPeer.call(userId, stream);\n    const video = document.createElement(\"video\");\n    video.id = userId;\n    call.on(\"stream\", (userVideoStream) => {\n      console.log(\"on stream call\");\n      addVideoStream(video, userVideoStream);\n      console.log(4);\n      // localStorage.setItem(\"lastUser\", false);\n      calUsersJoin();\n    });\n    call.on(\"close\", () => {\n      console.log(\"close\");\n      video.remove();\n    });\n\n    peers[userId] = call;\n    numberUser.push(userId);\n  };\n\n  const addVideoStream = (video, stream) => {\n    const videoGrid = document.getElementById(\"video-grid\");\n\n    if (video.srcObject === null) {\n      const userId = localStorage.getItem(\"userId\");\n\n      if (userId !== video.id) {\n        console.log(\"create video\");\n        video.srcObject = stream;\n        video.addEventListener(\"loadedmetadata\", () => {\n          video.play();\n        });\n        videoGrid.append(video);\n      }\n    }\n  };\n\n  const calUsersJoin = () => {\n    const videoElements = document.getElementsByTagName(\"video\");\n\n    setNumberOfUser(videoElements.length);\n  };\n\n  return (\n    <div className=\"video_container\">\n      <div className=\"class_name\">{roomName}</div>\n      <div className=\"amount\">{numberOfUser} Joined</div>\n      <div id=\"video-grid\"></div>\n    </div>\n  );\n};\n\nexport default CallVideo;\n","/home/user/Desktop/web-ui/src/funcs/upperFirstLetter.js",[],["505","506"],"/home/user/Desktop/web-ui/src/components/Tabs/ChatTab/ChatItem.js",["507","508","509","510","511","512","513","514","515","516"],"import React from \"react\";\n//Library\nimport useSound from \"use-sound\";\n//sound\nimport ping from \"../../../assets/sound/event_ping.mp3\";\n//Icons\nimport image from \"../../../assets/icons/image.png\";\nimport video from \"../../../assets/icons/video.png\";\nimport file from \"../../../assets/icons/file.png\";\nimport event from \"../../../assets/icons/calendar.png\";\n//Logic\nimport { getHourAndMinute } from \"../../../funcs/formatDate\";\nimport { decode } from \"../../../funcs/utf8\";\n//Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUpdateListRoom } from \"../../../redux/actions/dataAction\";\n//String\nimport {\n  CALLING_VIDEO,\n  CALLING_VOICE,\n  STOP_CALL_VIDEO,\n  STOP_CALL_VOICE,\n} from \"../../../const/string\";\n\nvar flagForNotiEvent = 1;\n\nconst ChatItem = ({ item, newRoomNameData, numberGroup }) => {\n  //Sound\n  const [play] = useSound(ping);\n  //Redux\n  const dispatch = useDispatch();\n  const typing = useSelector((state) => state.data.typing);\n  const updateListRoom = useSelector((state) => state.data.updateListRoom);\n\n  //Methods\n  React.useEffect(() => {\n    if (item && flagForNotiEvent <= numberGroup) {\n      if (item.event) {\n        if (\n          new Date(item.event.split(\"-\")[1]).getTime() >= new Date().getTime()\n        ) {\n          setTimeout(() => {\n            if (updateListRoom) dispatch(setUpdateListRoom());\n            setTimeout(() => dispatch(setUpdateListRoom(true)), 100);\n            play();\n          }, Math.abs(new Date(item.event.split(\"-\")[1]) - new Date()));\n        }\n      }\n\n      flagForNotiEvent += 1;\n    }\n  }, [item]);\n\n  const checkStatus = () => {\n    switch (item.status) {\n      case \"online\":\n        return <span className=\"status online\"></span>;\n      case \"offline\":\n        return <span className=\"status offline\"></span>;\n      case \"busy\":\n        return <span className=\"status busy\"></span>;\n      default:\n        return <span className=\"status online\"></span>;\n    }\n  };\n\n  const checkTypeMessage = () => {\n    const newMessage = item.messages[0];\n\n    if (newMessage) {\n      if (typing) {\n        if (typing.typing && typing.room === item.name) {\n          return (\n            <p className=\"message typing\">\n              typing\n              <span className=\"typing_animation\">\n                <span className=\"dot\"></span>\n                <span className=\"dot\"></span>\n                <span className=\"dot\"></span>\n              </span>\n            </p>\n          );\n        } else {\n          switch (newMessage.type) {\n            case \"text\":\n              switch (decode(newMessage.content)) {\n                case CALLING_VIDEO:\n                  return (\n                    <p className=\"message\">\n                      <i className=\"material-icons\">video_call</i>{\" \"}\n                      {decode(newMessage.content)}\n                    </p>\n                  );\n                case CALLING_VOICE:\n                  return (\n                    <p className=\"message\">\n                      <i className=\"material-icons\">mic</i>{\" \"}\n                      {decode(newMessage.content)}\n                    </p>\n                  );\n                case STOP_CALL_VIDEO:\n                  return (\n                    <p className=\"message\">\n                      <i className=\"material-icons\">missed_video_call</i>{\" \"}\n                      {decode(newMessage.content)}\n                    </p>\n                  );\n                case STOP_CALL_VOICE:\n                  return (\n                    <p className=\"message\">\n                      <i className=\"material-icons\">mic_off</i>{\" \"}\n                      {decode(newMessage.content)}\n                    </p>\n                  );\n                default:\n                  return (\n                    <p className=\"message\"> {decode(newMessage.content)}</p>\n                  );\n              }\n            case \"image\":\n              return (\n                <p className=\"message\">\n                  <img className=\"media_icon\" src={image} />\n                  {newMessage.filename}\n                </p>\n              );\n            case \"video\":\n              return (\n                <p className=\"message\">\n                  <img className=\"media_icon\" src={video} />\n                  {newMessage.filename}\n                </p>\n              );\n            case \"file\":\n              return (\n                <p className=\"message\">\n                  <img className=\"media_icon\" src={file} />\n                  {newMessage.filename}\n                </p>\n              );\n            default:\n              return <></>;\n          }\n        }\n      } else {\n        switch (newMessage.type) {\n          case \"text\":\n            switch (decode(newMessage.content)) {\n              case CALLING_VIDEO:\n                return (\n                  <p className=\"message\">\n                    <span className=\"material-icons\">video_call</span>{\" \"}\n                    {decode(newMessage.content)}\n                  </p>\n                );\n              case CALLING_VOICE:\n                return (\n                  <p className=\"message\">\n                    <span className=\"material-icons\">mic</span>{\" \"}\n                    {decode(newMessage.content)}\n                  </p>\n                );\n              case STOP_CALL_VIDEO:\n                return (\n                  <p className=\"message\">\n                    <span className=\"material-icons\">missed_video_call</span>{\" \"}\n                    {decode(newMessage.content)}\n                  </p>\n                );\n              case STOP_CALL_VOICE:\n                return (\n                  <p className=\"message\">\n                    <span className=\"material-icons\">mic_off</span>{\" \"}\n                    {decode(newMessage.content)}\n                  </p>\n                );\n              default:\n                return <p className=\"message\"> {decode(newMessage.content)}</p>;\n            }\n          case \"image\":\n            return (\n              <p className=\"message\">\n                <img className=\"media_icon\" src={image} />\n                {newMessage.filename}\n              </p>\n            );\n          case \"video\":\n            return (\n              <p className=\"message\">\n                <img className=\"media_icon\" src={video} />\n                {newMessage.filename}\n              </p>\n            );\n          case \"file\":\n            return (\n              <p className=\"message\">\n                <img className=\"media_icon\" src={file} />\n                {newMessage.filename}\n              </p>\n            );\n          default:\n            return <></>;\n        }\n      }\n    } else return <></>;\n  };\n\n  return (\n    <a href=\"#\">\n      <div className=\"item\">\n        <div className=\"user\">\n          <img className=\"user_avatar\" src={item.avatar} />\n          {checkStatus()}\n        </div>\n        <div className=\"body\">\n          <h5 className=\"user_name\">{item.name}</h5>\n          {checkTypeMessage()}\n        </div>\n        <div className=\"time\">\n          {item.event &&\n            new Date(item.event.split(\"-\")[1]).getTime() >\n              new Date().getTime() && <img src={event} width=\"15px\" data-tip=\"Event\"/>}\n          {item.messages[0] && getHourAndMinute(item.messages[0].createdAt)}\n        </div>\n        {item.unreadMessages ? (\n          <div className=\"unread_message\">\n            <span className=\"badge_unread\">\n              {item.unreadMessages && \"Unread\"}\n            </span>\n          </div>\n        ) : (\n          <>\n            {!item.seen && (\n              <div className=\"unread_message\">\n                <span className=\"badge_unread\">\n                  New {newRoomNameData && \"name\"}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </a>\n  );\n};\n\nexport default ChatItem;\n","/home/user/Desktop/web-ui/src/pages/Login/Login.js",["517"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { GoogleLogin } from \"react-google-login\";\n//Toast\nimport { notifyError } from \"../../utils/toast\";\n//Redux\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../redux/actions/userAction\";\nimport { setLoading } from \"../../redux/actions/dataAction\";\n//Image\nimport schoolIcon from \"../../assets/imgs/cooperation.jpg\";\n//Const\nimport { ClientId } from \"../../const/googleAPI\";\n// Apollo\nimport { gql, useMutation } from \"@apollo/client\";\n//Logic\nimport { translateErrorMessage } from \"../../funcs/errors\";\n\nconst LOGIN = gql`\n  mutation LOGIN($email: String!) {\n    login(email: $email) {\n      email\n      name\n      role\n      token\n      avatar\n    }\n  }\n`;\n\nconst Login = () => {\n  const history = useHistory();\n\n  //Redux variables\n  const dispatch = useDispatch();\n\n  // Login mutation\n  const [login, { loading }] = useMutation(LOGIN, {\n    update(_, res) {\n      const userDetails = res.data.login;\n      userDetails.avatar = res.data.login.avatar\n        ? res.data.login.avatar\n        : emailDetails.imageUrl;\n\n      localStorage.setItem(\"user\", JSON.stringify(userDetails));\n\n      const user = {\n        email: userDetails.email,\n        name: userDetails.name,\n        role: userDetails.role.toLowerCase(),\n        avatar: userDetails.avatar,\n      };\n\n      dispatch(setUserData(user));\n\n      switch (user.role) {\n        case \"student\":\n          history.push(\"/chat\");\n          break;\n        case \"teacher\":\n          history.push(\"/chat\");\n          break;\n        case \"staff\":\n          history.push(\"/manage\");\n          break;\n        case \"admin\":\n          history.push(\"/manage\");\n          break;\n        default:\n          break;\n      }\n      window.location.reload();\n    },\n    onError(err) {\n      notifyError(translateErrorMessage(err.message));\n    },\n  });\n\n  //Variables\n  const [emailDetails, setEmailDetails] = useState();\n  //Methods\n  React.useEffect(() => {\n    setLoading(loading);\n  }, [loading]);\n\n  const responseGoogle = (response) => {\n    setEmailDetails(response.profileObj);\n    try {\n      login({ variables: { email: response.profileObj.email } });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"login_container\">\n      <div className=\"content_container\">\n        <img className=\"school_icon\" src={schoolIcon} />\n        <span className=\"school_name\">Academic Portal</span>\n        <div className=\"email_container\">\n          <span className=\"login_label\">Sign in</span>\n          <GoogleLogin\n            clientId={ClientId}\n            buttonText=\"Login with school email\"\n            onSuccess={responseGoogle}\n            onFailure={responseGoogle}\n            cookiePolicy={\"single_host_origin\"}\n            theme=\"dark\"\n            className=\"btn_google\"\n          />\n        </div>\n        <span className=\"copyright\">© Copyright by Nguyen Tho</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/user/Desktop/web-ui/src/const/googleAPI.js",[],"/home/user/Desktop/web-ui/src/components/HeaderManage/Header.js",[],"/home/user/Desktop/web-ui/src/components/Tabs/SettingsTab/SettingsTab.js",["518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535"],"import React, { useEffect, useState } from \"react\";\n//Library\nimport useOnclickOutside from \"react-cool-onclickoutside\";\nimport Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\nimport FileViewer from \"react-file-viewer\";\n//Word\nimport term_condition from \"../../../assets/word/term_condition.docx\";\n//Image\nimport userImage from \"../../../assets/imgs/user_avatar.jpg\";\n//Toast\nimport { notifyError, notifySuccess } from \"../../../utils/toast\";\n//Icons\nimport edit_line from \"../../../assets/icons/edit_line.png\";\nimport edit_icon from \"../../../assets/icons/edit.png\";\nimport open_status from \"../../../assets/icons/arrow-pointing-downwards.png\";\nimport open from \"../../../assets/icons/right-arrow.png\";\nimport close from \"../../../assets/icons/up-arrow.png\";\nimport save from \"../../../assets/icons/save.png\";\n//Redux\nimport { editUserName, updateAvatar } from \"../../../redux/actions/userAction\";\nimport { setLoading } from \"../../../redux/actions/dataAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// Apollo\nimport { gql, useMutation } from \"@apollo/client\";\n// Const\nimport { UPDATE_USER_SUCCESS, UPDATE_AVATAR } from \"../../../const/string\";\n\nconst UPDATE_USER = gql`\n  mutation UPDATE_USER(\n    $email: String!\n    $name: String!\n    $password: String!\n    $avatar: String!\n  ) {\n    updateUser(\n      email: $email\n      name: $name\n      password: $password\n      avatar: $avatar\n    ) {\n      name\n    }\n  }\n`;\n\nconst UPLOAD_AVATAR = gql`\n  mutation($file: Upload!, $idOrEmail: String!, $messageOrUser: String!) {\n    uploadFile(\n      file: $file\n      idOrEmail: $idOrEmail\n      messageOrUser: $messageOrUser\n    ) {\n      filename\n      mimetype\n      encoding\n      url\n    }\n  }\n`;\n\nconst SettingTab = () => {\n  //Redux\n  const dispatch = useDispatch();\n  const user = useSelector((state) => {\n    return {\n      name: state.user.info.name,\n      email: state.user.info.email,\n      avatar: state.user.info.avatar,\n    };\n  });\n  // Apollo mutation\n  const [updateUser, updateUserPros] = useMutation(UPDATE_USER, {\n    update(_, res) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      user.name = res.data.updateUser.name;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      //Edit in redux\n      dispatch(editUserName(res.data.updateUser.name));\n    },\n    onCompleted(data) {\n      notifySuccess(UPDATE_USER_SUCCESS);\n    },\n    onError(err) {\n      notifyError(err.message);\n    },\n  });\n  const [uploadFile, updateAvatarPros] = useMutation(UPLOAD_AVATAR, {\n    update(_, res) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      user.avatar = res.data.uploadFile.url;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      //Edit in redux\n      dispatch(updateAvatar(res.data.uploadFile.url));\n    },\n    onCompleted(data) {\n      notifySuccess(UPDATE_AVATAR);\n    },\n    onError(err) {\n      console.log(err);\n      notifyError(err.message);\n    },\n  });\n  //Variables\n  const [collapse, setCollapse] = useState({\n    first: true,\n    second: false,\n  });\n  const [show, setShow] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [newName, setNewName] = useState();\n  const [uploadedImg, setUploadedImg] = useState(null);\n  //Hook\n  useEffect(() => {\n    const collapseElements = document.getElementsByClassName(\"collapse\");\n\n    collapseElements[0].className += \" show\";\n  }, []);\n\n  //Methods\n\n  useEffect(() => {\n    dispatch(setLoading(updateUserPros.loading));\n  }, [updateUserPros.loading]);\n\n  useEffect(() => {\n    dispatch(setLoading(updateAvatarPros.loading));\n  }, [updateAvatarPros.loading]);\n\n  useEffect(() => {\n    if (uploadedImg !== null) {\n      console.log(uploadedImg);\n    }\n  }, [uploadedImg]);\n\n  const ref = useOnclickOutside(() => {\n    setShow(false);\n  });\n\n  const handleOpenDropdownMenu = () => {\n    setShow(true);\n  };\n\n  const handleShowFirstCollapse = (event) => {\n    const collapseElements = document.getElementsByClassName(\"collapse\");\n\n    for (var i = 0; i < collapseElements.length; i++) {\n      if (collapseElements[i].id === \"first_collapse\") {\n        if (collapseElements[i].className.includes(\"show\")) {\n          collapseElements[i].className = \"collapse\";\n        } else {\n          collapseElements[i].className += \" show\";\n        }\n      }\n      setCollapse({\n        ...collapse,\n        first: !collapse.first,\n      });\n    }\n  };\n\n  const handleShowSecondCollapse = (event) => {\n    const collapseElements = document.getElementsByClassName(\"collapse\");\n\n    for (var i = 0; i < collapseElements.length; i++) {\n      if (collapseElements[i].id === \"second_collapse\") {\n        if (collapseElements[i].className.includes(\"show\")) {\n          collapseElements[i].className = \"collapse\";\n        } else {\n          collapseElements[i].className += \" show\";\n        }\n      }\n\n      setCollapse({\n        ...collapse,\n        second: !collapse.second,\n      });\n    }\n  };\n\n  const handleEditName = () => {\n    setIsEdit(true);\n  };\n\n  const handleChangeName = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleSaveName = () => {\n    if (newName !== user.name) {\n      //Update database\n      updateUser({\n        variables: {\n          email: user.email,\n          name: newName,\n          password: \"\",\n          avatar: user.avatar,\n        },\n      });\n    }\n    setIsEdit(false);\n  };\n\n  const handleEditAvatar = () => {\n    const fileInput = document.getElementById(\"file_input\");\n    fileInput.click();\n  };\n\n  const handleUploadImage = (e) => {\n    const {\n      target: {\n        validity,\n        files: [file],\n      },\n    } = e;\n\n    if (validity.valid) {\n      uploadFile({\n        variables: {\n          file,\n          idOrEmail: user.email,\n          messageOrUser: \"user\",\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"tab_content\">\n      <div className=\"tab_content_header\">\n        <h4>Settings</h4>\n      </div>\n      <div className=\"user_session\">\n        <div className=\"user_session_image_settings\">\n          <img src={user.avatar} />\n          <button className=\"btn_edit_user_avatar\" onClick={handleEditAvatar}>\n            <img className=\"edit_icon\" src={edit_icon} />\n            <input\n              type=\"file\"\n              name=\"file_input\"\n              id=\"file_input\"\n              accept=\"image/*\"\n              hidden\n              onChange={handleUploadImage}\n            />\n          </button>\n        </div>\n        <div className=\"user_session_name\">{user.name}</div>\n        {/* <div className=\"user_session_status\">\n          <a\n            href=\"#\"\n            className=\"status_wrapper\"\n            onClick={handleOpenDropdownMenu}\n          >\n            Available\n            <img src={open_status} className=\"status_dropdown_open\" />\n          </a>\n          <div\n            className={\n              show ? \"dropdown_status show_dropdown\" : \"dropdown_status\"\n            }\n            ref={ref}\n          >\n            <button className=\"item\">Available</button>\n            <button className=\"item\">Busy</button>\n          </div>\n        </div> */}\n      </div>\n\n      <div className=\"settings_content\">\n        <div className=\"accordion\">\n          <div className=\"card\">\n            <a href=\"#\" onClick={handleShowFirstCollapse}>\n              <div>\n                <span>Personal Info</span>\n                <img\n                  src={collapse.first ? open : close}\n                  className=\"open_close_icon\"\n                />\n              </div>\n            </a>\n            <div className=\"collapse\" id=\"first_collapse\">\n              <div className=\"card_body\">\n                <div className=\"float_right\">\n                  {!isEdit ? (\n                    <button className=\"btn_edit_name\" onClick={handleEditName}>\n                      <img src={edit_line} className=\"icon_edit_name\" />\n                      Edit\n                    </button>\n                  ) : (\n                    <button className=\"btn_edit_name\" onClick={handleSaveName}>\n                      <img src={save} className=\"icon_edit_name\" />\n                      Save\n                    </button>\n                  )}\n                </div>\n                <div>\n                  <p>Name</p>\n                  {!isEdit ? (\n                    <h5>{user.name}</h5>\n                  ) : (\n                    <input\n                      className=\"name_input\"\n                      defaultValue={user.name}\n                      type=\"text\"\n                      id=\"name_input\"\n                      onChange={handleChangeName}\n                    />\n                  )}\n                </div>\n                <div>\n                  <p>Email</p>\n                  <h5>{user.email}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card\">\n            <a href=\"#\" onClick={handleShowSecondCollapse}>\n              <div>\n                <span>Help</span>\n                <img\n                  src={collapse.second ? open : close}\n                  className=\"open_close_icon\"\n                />\n              </div>\n            </a>\n            <div className=\"collapse\" id=\"second_collapse\">\n              <div className=\"card_body\">\n                <div>\n                  <div className=\"session\">\n                    <h5>\n                      <a href=\"#\">FAQs</a>\n                    </h5>\n                  </div>\n                  <div className=\"session border_top\">\n                    <h5>\n                      <Popup\n                        trigger={<a href=\"#\">Term & Privacy policy</a>}\n                        position=\"right center\"\n                        modal\n                        nested\n                      >\n                        {(close) => (\n                          <div className=\"term_condition\">\n                            <FileViewer\n                              fileType=\"docx\"\n                              filePath={term_condition}\n                            />\n                          </div>\n                        )}\n                      </Popup>\n                    </h5>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingTab;\n","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/StaffSession/StaffSession.js",["536","537"],"import React, { useEffect } from \"react\";\n//Library\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CImg,\n} from \"@coreui/react\";\nimport readXlsxFile from \"read-excel-file\";\n//Logic\nimport { UpperFirstLetter } from \"../../../../funcs/upperFirstLetter\";\nimport { checkEmail, checkRole } from \"../../../../funcs/validation\";\n//Apollo\nimport { gql, useMutation } from \"@apollo/client\";\n//Toast\nimport { notifyError } from \"../../../../utils/toast\";\n//Redux\nimport { useDispatch } from \"react-redux\";\nimport {\n  setLoading,\n  setNewUserStaff,\n} from \"../../../../redux/actions/dataAction\";\n//Const\nimport { EXCEL_NOT_SUITABLE, EXCEL_NOT_SUITABLE_ROLE_EMAIL } from \"../../../../const/string\";\n\nconst CREATE_USER = gql`\n  mutation(\n    $email: String!\n    $password: String!\n    $role: String!\n    $name: String!\n    $classNames: [String!]\n  ) {\n    createUser(\n      email: $email\n      password: $password\n      role: $role\n      name: $name\n      classNames: $classNames\n    ) {\n      email\n      name\n      role\n      createdAt\n      avatar\n      status\n      classes {\n        name\n      }\n    }\n  }\n`;\n\nconst fields = [\n  \"no\",\n  \"email\",\n  \"name\",\n  \"avatar\",\n  \"registered\",\n  \"role\",\n  \"status\",\n];\n\nconst getBadge = (status) => {\n  switch (status) {\n    case \"online\":\n      return \"success\";\n    case \"offline\":\n      return \"secondary\";\n    default:\n      return \"primary\";\n  }\n};\n\nconst StaffSession = ({ classDetails }) => {\n  //Redux\n  const dispatch = useDispatch();\n  //Apollo\n  const [createUser, createUserProps] = useMutation(CREATE_USER, {\n    onCompleted(data) {\n      dispatch(setNewUserStaff(data.createUser));\n    },\n    onError(err) {\n      notifyError(err.message);\n    },\n  });\n  //Methods\n  useEffect(() => {\n    dispatch(setLoading(createUserProps.loading));\n  }, [createUserProps.loading]);\n\n  const handleUploadFile = () => {\n    const input = document.getElementById(\"file_input\");\n\n    input.click();\n  };\n\n  const handleChangeFile = () => {\n    const input = document.getElementById(\"file_input\");\n\n    readXlsxFile(input.files[0]).then((rows) => {\n\n      const headers = [\"email\", \"name\", \"role\", \"classes\"];\n\n      //Check headers are suitable\n      if (JSON.stringify(headers) === JSON.stringify(rows[0])) {\n        //Check validation\n        var validEmail = true;\n        var validRole = true;\n        for (var i = 1; i < rows.length; i++) {\n          validEmail = checkEmail(rows[i][0]);\n          validRole = checkRole(rows[i][2]);\n        }\n\n        if (validEmail && validRole) {\n          for (var i = 1; i < rows.length; i++) {\n            var classes = rows[i][3].trim().split(\", \");\n\n            createUser({\n              variables: {\n                email: rows[i][0],\n                password: \"123\",\n                name: rows[i][1],\n                role: rows[i][2],\n                classNames: classes,\n              },\n            });\n          }\n        } else {\n          notifyError(EXCEL_NOT_SUITABLE_ROLE_EMAIL);\n        }\n      } else {\n        notifyError(EXCEL_NOT_SUITABLE);\n      }\n    });\n  };\n\n  return (\n    <CRow className=\"staff_session_container\">\n      <CCol>\n        <CCard>\n          <CCardHeader className=\"card_header\">\n            <div>\n              {\" \"}\n              <h5>{classDetails.name}</h5>\n            </div>\n            <div>\n              {\" \"}\n              <CButton\n                block\n                variant=\"outline\"\n                color=\"secondary\"\n                onClick={handleUploadFile}\n              >\n                Add more students\n              </CButton>\n            </div>\n            <input type=\"file\" id=\"file_input\" onChange={handleChangeFile} />\n          </CCardHeader>\n          <CCardBody>\n            <CDataTable\n              items={classDetails.users}\n              fields={fields}\n              hover\n              bordered\n              size=\"sm\"\n              itemsPerPage={10}\n              pagination\n              responsive\n              scopedSlots={{\n                no: (item, index) => (\n                  <td>\n                    <div>{index}</div>\n                  </td>\n                ),\n                avatar: (item) => (\n                  <td>\n                    <CImg src={item.avatar} height=\"36\" width=\"36\" />\n                  </td>\n                ),\n                registered: (item) => (\n                  <td>\n                    <div>{new Date(`${item.createdAt}`).toDateString()}</div>\n                  </td>\n                ),\n                status: (item) => (\n                  <td>\n                    <CBadge color={getBadge(item.status)}>{item.status}</CBadge>\n                  </td>\n                ),\n                role: (item) => (\n                  <td>\n                    <div>{UpperFirstLetter(item.role)}</div>\n                  </td>\n                ),\n              }}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default StaffSession;\n","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/SelectSession/ChooseItem.js",[],["538","539"],"/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/AdminSession/AdminTableItem.js",["540","541","542","543","544"],"import React, { useEffect, useState } from \"react\";\n//Library\nimport { CBadge, CProgress, CTooltip } from \"@coreui/react\";\n//Icons\nimport private_group from \"../../../../assets/icons/private_group.png\";\nimport public_group from \"../../../../assets/icons/public_group.png\";\n//Logic\nimport { compareWithNow } from \"../../../../funcs/formatDate\";\n//Redux\nimport { useSelector } from \"react-redux\";\n\nconst AdminTableItem = ({ room, createdDate, index, totalMessage }) => {\n  //Redux\n  const user = useSelector((state) => state.user.info);\n  const userOnline = useSelector((state) => state.data.userOnline);\n  //Variables\n  const [roomData, setRoomData] = useState();\n  //Methods\n  useEffect(() => {\n    setRoomData(room);\n  }, [room]);\n\n  useEffect(() => {\n    if (userOnline && roomData) {\n      const newUsers = [];\n\n      for (var i = 0; i < room.users.length; i++) {\n        if (room.users[i].email === userOnline.email) {\n          newUsers.push({\n            ...room.users[i],\n            status: \"online\",\n          });\n        } else {\n          newUsers.push(room.users[i]);\n        }\n      }\n\n      setRoomData({\n        ...roomData,\n        users: newUsers,\n      });\n    }\n  }, userOnline);\n\n  const checkTypeOfGroup = () => {\n    if (roomData?.users.length > 2) {\n      return (\n        <CTooltip content=\"Social room\">\n          <img src={public_group} width=\"36\" height=\"36\" />\n        </CTooltip>\n      );\n    } else {\n      return (\n        <CTooltip content=\"Private room\">\n          <img src={private_group} width=\"36\" height=\"36\" />\n        </CTooltip>\n      );\n    }\n  };\n\n  const getBadge = (status) => {\n    switch (status) {\n      case \"online\":\n        return \"success\";\n      case \"offline\":\n        return \"secondary\";\n      default:\n        return \"primary\";\n    }\n  };\n\n  const messageRate = () => {\n    if (totalMessage === 0) {\n      return \"0\";\n    } else {\n      return (room.messages.length / totalMessage).toString();\n    }\n  };\n\n  const checkStatusRoom = () => {\n    const onlineUsers = roomData?.users.filter(\n      (user) => user.status === \"online\"\n    );\n\n    if (onlineUsers) {\n      if (onlineUsers.length > 0) {\n        return \"online\";\n      } else {\n        return \"offline\";\n      }\n    }\n  };\n\n  const roomStatus = checkStatusRoom();\n\n  return (\n    <tr key={index}>\n      <td className=\"text-center\">\n        <div className=\"c-avatar\">\n          <img\n            src={room.avatar}\n            alt=\"admin@bootstrapmaster.com\"\n            width=\"24\"\n            height=\"24\"\n            style={{ borderRadius: \"50%\" }}\n          />\n          {roomStatus === \"online\" ? (\n            <span className=\"c-avatar-status bg-success\"></span>\n          ) : (\n            <span className=\"c-avatar-status bg-danger\"></span>\n          )}\n        </div>\n      </td>\n      <td>\n        <div>{roomData?.name}</div>\n        <div className=\"small text-muted\">\n          <span>{compareWithNow(roomData?.createdAt) ? \"New\" : \"Old\"}</span> |\n          Registered: {new Date(`${roomData?.createdAt}`).toDateString()}\n        </div>\n      </td>\n      <td>\n        <div className=\"clearfix\">\n          <div className=\"float-left\">\n            <strong>{messageRate()}%</strong>\n          </div>\n          <div className=\"float-right\">\n            <small className=\"text-muted\">\n              {roomData?.messages.length}/{totalMessage}\n            </small>\n          </div>\n        </div>\n        <CProgress\n          className=\"progress-xs\"\n          color=\"success\"\n          value={messageRate()}\n        />\n      </td>\n      <td className=\"text-center\">{checkTypeOfGroup()}</td>\n      <td>\n        {/* <div className=\"small text-muted\">Last active</div>\n        <strong>10 sec ago</strong> */}\n        <CBadge color={getBadge(roomStatus)}>{roomStatus}</CBadge>\n      </td>\n    </tr>\n  );\n};\n\nexport default AdminTableItem;\n","/home/user/Desktop/web-ui/src/components/ChatScreen/ChatArea/ChatArea.js",["545"],"/home/user/Desktop/web-ui/src/redux/types.js",[],"/home/user/Desktop/web-ui/src/redux/reducers/userReducer.js",["546"],"import {\n  SET_USER,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  EDIT_USER_NAME,\n  UPDATE_AVATAR,\n} from \"../types\";\nimport jwtDecode from \"jwt-decode\";\n\nvar initialState = {\n  authenticated: false,\n  loading: false,\n  info: {},\n};\n\nconst userState = JSON.parse(localStorage.getItem(\"user\"));\nif (userState) {\n  const decodedToken = jwtDecode(userState.token);\n  const expiresAt = new Date(decodedToken.exp * 1000);\n\n  if (new Date() > expiresAt) {\n    localStorage.removeItem(\"user\");\n  } else {\n    initialState = {\n      authenticated: true,\n      loading: false,\n      info: {\n        email: userState.email,\n        name: userState.name,\n        role: userState.role,\n        avatar: userState.avatar,\n      },\n    };\n  }\n} else console.log(\"No token found\");\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true,\n      };\n    case SET_UNAUTHENTICATED:\n      return initialState;\n    case SET_USER:\n      return {\n        ...state,\n        authenticated: true,\n        loading: false,\n        info: action.payload,\n      };\n    case EDIT_USER_NAME:\n      return {\n        ...state,\n        info: {\n          ...state.info,\n          name: action.payload,\n        },\n      };\n    case UPDATE_AVATAR:\n      return {\n        ...state,\n        info: {\n          ...state.info,\n          avatar: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/home/user/Desktop/web-ui/src/components/CallRealTime/VoiceCall.js",["547","548","549","550","551","552","553","554"],"import React, { useEffect, useState } from \"react\";\n//Apollo\nimport { gql, useMutation, useSubscription } from \"@apollo/client\";\n//Library\nimport Peer from \"peerjs\";\n\nconst USER_JOIN_ROOM = gql`\n  mutation($room: String, $userId: String) {\n    userJoinRoom(room: $room, userId: $userId)\n  }\n`;\n\nconst USER_OUT_ROOM = gql`\n  mutation($room: String, $userId: String) {\n    userOutRoom(room: $room, userId: $userId)\n  }\n`;\n\nconst JOIN_ROOM = gql`\n  subscription {\n    joinRoom {\n      room\n      userId\n    }\n  }\n`;\nconst OUT_ROOM = gql`\n  subscription {\n    outRoom {\n      room\n      userId\n    }\n  }\n`;\n\nconst peers = {};\n\nconst myVideo = document.createElement(\"video\");\nmyVideo.controls = true;\nmyVideo.id = \"own\";\n\nconst CallVideo = ({ roomName }) => {\n  //Apollo\n  const [userJoinRoom, props] = useMutation(USER_JOIN_ROOM, {\n    onError(err) {\n      console.log(err.message);\n    },\n  });\n  const [userOutRoom, props1] = useMutation(USER_OUT_ROOM, {\n    onCompleted(data) {\n      // console.log(data)\n      // if (peers[data.userOutRoom.userId]) peers[data.userOutRoom.userId].close();\n    },\n    onError(err) {\n      console.log(err.message);\n    },\n  });\n  const userJoinRoomData = useSubscription(JOIN_ROOM, {\n    onSubscriptionData(data) {\n      console.log(\"user join room\", data);\n      if (stream) {\n        connectToNewUser(data.subscriptionData.data.joinRoom.userId, stream);\n      }\n    },\n  });\n\n  const userOutRoomData = useSubscription(OUT_ROOM, {\n    onSubscriptionData(data) {\n      try {\n        const userId = data.subscriptionData.data.outRoom.userId;\n        console.log(\"User out room\", userId);\n        const videoGrid = document.getElementById(\"video-grid\");\n        const oldVideo = document.getElementById(userId);\n        videoGrid.removeChild(oldVideo);\n\n        if (peers[userId]) peers[userId].close();\n\n        calUsersJoin();\n      } catch (error) {}\n    },\n  });\n  //Variables\n  const [stream, setStream] = useState();\n  const [myPeer, setMyPeer] = useState();\n  const [numberOfUser, setNumberOfUser] = useState(0);\n  //Methods\n  useEffect(() => {\n    var peer = new Peer();\n    setMyPeer(peer);\n\n    return () => {\n      try {\n        const userId = localStorage.getItem(\"userId\");\n        console.log(\"a user out\", userId);\n        userOutRoom({ variables: { userId, room: roomName } });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (myPeer) {\n      myPeer.on(\"open\", (id) => {\n        userJoinRoom({\n          variables: { room: roomName, userId: id },\n        });\n\n        localStorage.setItem(\"userId\", id);\n      });\n\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((newStream) => {\n          if (myVideo.srcObject !== null) {\n            myVideo.srcObject = null;\n          }\n\n          // Stop only video\n          newStream.getVideoTracks.forEach((track) => (track.enabled = false));\n\n          myVideo.addEventListener(\"volumechange\", (e) => {\n            if (!myVideo.muted) {\n              newStream\n              .getAudioTracks()\n              .forEach((track) => (track.enabled = true));\n            } else {\n              newStream\n              .getAudioTracks()\n              .forEach((track) => (track.enabled = false));\n            }\n          \n          });\n\n          addVideoStream(myVideo, newStream);\n          calUsersJoin();\n          console.log(\"add my video\");\n\n          myPeer.on(\"call\", (call) => {\n            console.log(\"peer on call\");\n            call.answer(newStream);\n            const video = document.createElement(\"video\");\n            video.id = call.peer;\n            call.on(\"stream\", (userVideoStream) => {\n              console.log(\"on stream on call\", userVideoStream);\n              addVideoStream(video, userVideoStream);\n              calUsersJoin();\n            });\n          });\n\n          setStream(newStream);\n        });\n    }\n  }, myPeer);\n\n  const connectToNewUser = (userId, stream) => {\n    console.log(\"call\", stream);\n    const call = myPeer.call(userId, stream);\n    const video = document.createElement(\"video\");\n    video.id = userId;\n    call.on(\"stream\", (userVideoStream) => {\n      console.log(\"on stream call\");\n      addVideoStream(video, userVideoStream);\n      calUsersJoin();\n    });\n    call.on(\"close\", () => {\n      console.log(\"close\");\n      video.remove();\n    });\n\n    peers[userId] = call;\n  };\n\n  const addVideoStream = (video, stream) => {\n    const videoGrid = document.getElementById(\"video-grid\");\n\n    if (video.srcObject === null) {\n      const userId = localStorage.getItem(\"userId\");\n\n      if (userId !== video.id) {\n        console.log(\"create video\");\n        video.srcObject = stream;\n        video.addEventListener(\"loadedmetadata\", () => {\n          video.play();\n        });\n        videoGrid.append(video);\n      }\n    }\n  };\n\n  const calUsersJoin = () => {\n    const videoElements = document.getElementsByTagName(\"video\");\n\n    setNumberOfUser(videoElements.length);\n  };\n\n  const hasAudio = (video) => {\n    return (\n      video.mozHasAudio ||\n      Boolean(video.webkitAudioDecodedByteCount) ||\n      Boolean(video.audioTracks && video.audioTracks.length)\n    );\n  };\n\n  return (\n    <div className=\"video_container\">\n      <div className=\"class_name\">{roomName}</div>\n      <div className=\"amount\">{numberOfUser} Joined</div>\n      <div id=\"video-grid\"></div>\n    </div>\n  );\n};\n\nexport default CallVideo;\n","/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/AdminSession/PieChart.js",[],"/home/user/Desktop/web-ui/src/utils/dynamicRoute.js",[],"/home/user/Desktop/web-ui/src/funcs/formatDate.js",["555","556","557"],"export const getDate = (time) => {\n  return new Date(time).toLocaleDateString(\"en-US\");\n}\n\nexport const getHourAndMinute = (time) => {\n  return new Date(time)\n    .toLocaleTimeString()\n    .replace(/([\\d]+:[\\d]{2})(:[\\d]{2})(.*)/, \"$1$3\");\n};\n\nexport const compareWithNow = (time) => {\n    const currentTime = new Date(time);\n  const today = new Date();\n  return (\n    currentTime.getDate() == today.getDate() &&\n    currentTime.getMonth() == today.getMonth() &&\n    currentTime.getFullYear() == today.getFullYear()\n  );\n};\n\nexport const compareTwoDate = (time1, time2) => {\n    return new Date(time1).toDateString() === new Date(time2).toDateString()\n}","/home/user/Desktop/web-ui/src/funcs/errors.js",[],"/home/user/Desktop/web-ui/src/App.js",["558"],"import React from \"react\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\n//Library\nimport GridLoader from \"react-spinners/GridLoader\";\nimport LoadingOverlay from \"react-loading-overlay\";\n//Pages\nimport Login from \"./pages/Login/Login\";\nimport Chat from \"./pages/Chat/Chat\";\nimport Manage from \"./pages/Manage/Manage\";\nimport ErrorPage from \"./pages/Error/Error\";\n//Components\nimport ApolloProvider from \"./apollo/apolloProvider\";\nimport DynamicRoute from \"./utils/dynamicRoute\";\n//SCSS\nimport \"./scss/main.scss\";\n//Redux\nimport { useSelector } from \"react-redux\";\n//Toast\nimport { Container } from \"./utils/toast\";\n\nconst App = () => {\n  //Redux\n  const loading = useSelector((state) => state.data.loading);\n  //Methods\n  React.useEffect(() => {\n    localStorage.removeItem(\"selectedRoom\");\n  }, []);\n\n  return (\n    <ApolloProvider>\n      <LoadingOverlay active={loading} spinner={<GridLoader color=\"silver\" />}>\n        <BrowserRouter>\n          <Container />\n          <Switch>\n            <DynamicRoute path=\"/login\" component={Login} unauthenticated />\n            <DynamicRoute exact path=\"/chat\" component={Chat} authenticated />\n            <DynamicRoute\n              exact\n              path=\"/manage\"\n              component={Manage}\n              authenticated\n            />\n            <DynamicRoute path=\"/\" component={Chat} authenticated />\n          </Switch>\n        </BrowserRouter>\n      </LoadingOverlay>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","/home/user/Desktop/web-ui/src/components/Tabs/ChatTab/ChatItemSkeleton.js",["559","560"],"/home/user/Desktop/web-ui/src/components/ContentManage/Sessions/AdminSession/AdminSession.js",["561","562","563","564","565","566","567"],"/home/user/Desktop/web-ui/src/components/ChatScreen/ChatArea/MessageSkeleton.js",["568","569","570","571","572","573"],{"ruleId":"574","replacedBy":"575"},{"ruleId":"576","replacedBy":"577"},{"ruleId":"574","replacedBy":"578"},{"ruleId":"576","replacedBy":"579"},{"ruleId":"574","replacedBy":"580"},{"ruleId":"576","replacedBy":"581"},{"ruleId":"582","severity":1,"message":"583","line":42,"column":1,"nodeType":"584","endLine":187,"endColumn":2},{"ruleId":"574","replacedBy":"585"},{"ruleId":"576","replacedBy":"586"},{"ruleId":"574","replacedBy":"587"},{"ruleId":"576","replacedBy":"588"},{"ruleId":"574","replacedBy":"589"},{"ruleId":"576","replacedBy":"590"},{"ruleId":"591","severity":1,"message":"592","line":7,"column":8,"nodeType":"593","messageId":"594","endLine":7,"endColumn":19},{"ruleId":"591","severity":1,"message":"595","line":17,"column":8,"nodeType":"593","messageId":"594","endLine":17,"endColumn":17},{"ruleId":"596","severity":1,"message":"597","line":40,"column":6,"nodeType":"598","endLine":40,"endColumn":22,"suggestions":"599"},{"ruleId":"600","severity":1,"message":"601","line":46,"column":11,"nodeType":"602","endLine":46,"endColumn":40},{"ruleId":"603","severity":1,"message":"604","line":50,"column":13,"nodeType":"602","endLine":50,"endColumn":46},{"ruleId":"600","severity":1,"message":"601","line":53,"column":13,"nodeType":"602","endLine":53,"endColumn":66},{"ruleId":"603","severity":1,"message":"605","line":67,"column":15,"nodeType":"602","endLine":67,"endColumn":45},{"ruleId":"600","severity":1,"message":"601","line":68,"column":17,"nodeType":"602","endLine":68,"endColumn":35},{"ruleId":"600","severity":1,"message":"601","line":74,"column":19,"nodeType":"602","endLine":74,"endColumn":51},{"ruleId":"603","severity":1,"message":"604","line":78,"column":21,"nodeType":"602","endLine":78,"endColumn":56},{"ruleId":"600","severity":1,"message":"601","line":81,"column":21,"nodeType":"602","endLine":81,"endColumn":65},{"ruleId":"600","severity":1,"message":"601","line":94,"column":19,"nodeType":"602","endLine":94,"endColumn":38},{"ruleId":"600","severity":1,"message":"601","line":110,"column":19,"nodeType":"602","endLine":110,"endColumn":38},{"ruleId":"600","severity":1,"message":"601","line":116,"column":23,"nodeType":"602","endLine":116,"endColumn":42},{"ruleId":"600","severity":1,"message":"601","line":122,"column":27,"nodeType":"602","endLine":122,"endColumn":46},{"ruleId":"600","severity":1,"message":"601","line":125,"column":31,"nodeType":"602","endLine":125,"endColumn":75},{"ruleId":"600","severity":1,"message":"601","line":148,"column":19,"nodeType":"602","endLine":148,"endColumn":43},{"ruleId":"600","severity":1,"message":"601","line":154,"column":23,"nodeType":"602","endLine":154,"endColumn":47},{"ruleId":"600","severity":1,"message":"601","line":160,"column":27,"nodeType":"602","endLine":160,"endColumn":51},{"ruleId":"600","severity":1,"message":"601","line":163,"column":31,"nodeType":"602","endLine":163,"endColumn":75},{"ruleId":"591","severity":1,"message":"606","line":10,"column":8,"nodeType":"593","messageId":"594","endLine":10,"endColumn":13},{"ruleId":"591","severity":1,"message":"607","line":12,"column":8,"nodeType":"593","messageId":"594","endLine":12,"endColumn":17},{"ruleId":"574","replacedBy":"608"},{"ruleId":"576","replacedBy":"609"},{"ruleId":"591","severity":1,"message":"610","line":108,"column":20,"nodeType":"593","messageId":"594","endLine":108,"endColumn":25},{"ruleId":"596","severity":1,"message":"611","line":179,"column":6,"nodeType":"598","endLine":179,"endColumn":15,"suggestions":"612"},{"ruleId":"613","severity":1,"message":"614","line":198,"column":17,"nodeType":"615","messageId":"616","endLine":200,"endColumn":33},{"ruleId":"617","severity":1,"message":"618","line":215,"column":21,"nodeType":"593","messageId":"619","endLine":215,"endColumn":22},{"ruleId":"596","severity":1,"message":"611","line":248,"column":6,"nodeType":"598","endLine":248,"endColumn":15,"suggestions":"620"},{"ruleId":"596","severity":1,"message":"621","line":308,"column":6,"nodeType":"598","endLine":308,"endColumn":24,"suggestions":"622"},{"ruleId":"596","severity":1,"message":"623","line":317,"column":6,"nodeType":"598","endLine":317,"endColumn":15,"suggestions":"624"},{"ruleId":"600","severity":1,"message":"601","line":19,"column":9,"nodeType":"602","endLine":19,"endColumn":36},{"ruleId":"603","severity":1,"message":"604","line":27,"column":9,"nodeType":"602","endLine":27,"endColumn":40},{"ruleId":"600","severity":1,"message":"601","line":29,"column":22,"nodeType":"602","endLine":29,"endColumn":41},{"ruleId":"574","replacedBy":"625"},{"ruleId":"576","replacedBy":"626"},{"ruleId":"591","severity":1,"message":"627","line":7,"column":8,"nodeType":"593","messageId":"594","endLine":7,"endColumn":20},{"ruleId":"591","severity":1,"message":"628","line":11,"column":8,"nodeType":"593","messageId":"594","endLine":11,"endColumn":12},{"ruleId":"591","severity":1,"message":"629","line":15,"column":8,"nodeType":"593","messageId":"594","endLine":15,"endColumn":18},{"ruleId":"591","severity":1,"message":"592","line":19,"column":8,"nodeType":"593","messageId":"594","endLine":19,"endColumn":19},{"ruleId":"596","severity":1,"message":"630","line":98,"column":6,"nodeType":"598","endLine":98,"endColumn":43,"suggestions":"631"},{"ruleId":"591","severity":1,"message":"632","line":114,"column":9,"nodeType":"593","messageId":"594","endLine":114,"endColumn":28},{"ruleId":"591","severity":1,"message":"633","line":126,"column":9,"nodeType":"593","messageId":"594","endLine":126,"endColumn":28},{"ruleId":"603","severity":1,"message":"604","line":274,"column":9,"nodeType":"602","endLine":274,"endColumn":54},{"ruleId":"600","severity":1,"message":"601","line":275,"column":11,"nodeType":"602","endLine":275,"endColumn":35},{"ruleId":"600","severity":1,"message":"601","line":283,"column":13,"nodeType":"602","endLine":283,"endColumn":45},{"ruleId":"600","severity":1,"message":"601","line":290,"column":19,"nodeType":"602","endLine":290,"endColumn":38},{"ruleId":"600","severity":1,"message":"601","line":354,"column":15,"nodeType":"602","endLine":354,"endColumn":39},{"ruleId":"600","severity":1,"message":"601","line":361,"column":21,"nodeType":"602","endLine":361,"endColumn":76},{"ruleId":"600","severity":1,"message":"601","line":378,"column":15,"nodeType":"602","endLine":378,"endColumn":39},{"ruleId":"600","severity":1,"message":"601","line":389,"column":27,"nodeType":"602","endLine":389,"endColumn":67},{"ruleId":"603","severity":1,"message":"605","line":401,"column":29,"nodeType":"602","endLine":401,"endColumn":32},{"ruleId":"600","severity":1,"message":"601","line":402,"column":31,"nodeType":"602","endLine":405,"endColumn":33},{"ruleId":"634","severity":1,"message":"635","line":406,"column":31,"nodeType":"602","endLine":406,"endColumn":77},{"ruleId":"600","severity":1,"message":"601","line":414,"column":21,"nodeType":"602","endLine":414,"endColumn":40},{"ruleId":"600","severity":1,"message":"601","line":430,"column":15,"nodeType":"602","endLine":430,"endColumn":39},{"ruleId":"600","severity":1,"message":"601","line":437,"column":21,"nodeType":"602","endLine":437,"endColumn":77},{"ruleId":"600","severity":1,"message":"601","line":448,"column":21,"nodeType":"602","endLine":448,"endColumn":76},{"ruleId":"600","severity":1,"message":"601","line":464,"column":15,"nodeType":"602","endLine":464,"endColumn":39},{"ruleId":"600","severity":1,"message":"601","line":477,"column":21,"nodeType":"602","endLine":477,"endColumn":76},{"ruleId":"591","severity":1,"message":"636","line":12,"column":3,"nodeType":"593","messageId":"594","endLine":12,"endColumn":19},{"ruleId":"591","severity":1,"message":"637","line":16,"column":3,"nodeType":"593","messageId":"594","endLine":16,"endColumn":13},{"ruleId":"591","severity":1,"message":"610","line":225,"column":18,"nodeType":"593","messageId":"594","endLine":225,"endColumn":23},{"ruleId":"596","severity":1,"message":"638","line":316,"column":6,"nodeType":"598","endLine":316,"endColumn":33,"suggestions":"639"},{"ruleId":"596","severity":1,"message":"638","line":345,"column":6,"nodeType":"598","endLine":345,"endColumn":39,"suggestions":"640"},{"ruleId":"596","severity":1,"message":"638","line":375,"column":6,"nodeType":"598","endLine":375,"endColumn":20,"suggestions":"641"},{"ruleId":"596","severity":1,"message":"638","line":398,"column":6,"nodeType":"598","endLine":398,"endColumn":19,"suggestions":"642"},{"ruleId":"596","severity":1,"message":"638","line":470,"column":6,"nodeType":"598","endLine":470,"endColumn":24,"suggestions":"643"},{"ruleId":"596","severity":1,"message":"638","line":484,"column":6,"nodeType":"598","endLine":484,"endColumn":17,"suggestions":"644"},{"ruleId":"596","severity":1,"message":"638","line":513,"column":6,"nodeType":"598","endLine":513,"endColumn":25,"suggestions":"645"},{"ruleId":"596","severity":1,"message":"638","line":543,"column":6,"nodeType":"598","endLine":543,"endColumn":16,"suggestions":"646"},{"ruleId":"596","severity":1,"message":"638","line":572,"column":6,"nodeType":"598","endLine":572,"endColumn":23,"suggestions":"647"},{"ruleId":"596","severity":1,"message":"638","line":602,"column":6,"nodeType":"598","endLine":602,"endColumn":18,"suggestions":"648"},{"ruleId":"596","severity":1,"message":"649","line":644,"column":6,"nodeType":"598","endLine":644,"endColumn":15,"suggestions":"650"},{"ruleId":"617","severity":1,"message":"651","line":684,"column":13,"nodeType":"593","messageId":"619","endLine":684,"endColumn":17},{"ruleId":"617","severity":1,"message":"652","line":685,"column":13,"nodeType":"593","messageId":"619","endLine":685,"endColumn":25},{"ruleId":"596","severity":1,"message":"653","line":730,"column":6,"nodeType":"598","endLine":730,"endColumn":31,"suggestions":"654"},{"ruleId":"596","severity":1,"message":"655","line":743,"column":6,"nodeType":"598","endLine":743,"endColumn":17,"suggestions":"656"},{"ruleId":"596","severity":1,"message":"655","line":751,"column":6,"nodeType":"598","endLine":751,"endColumn":25,"suggestions":"657"},{"ruleId":"617","severity":1,"message":"658","line":771,"column":16,"nodeType":"593","messageId":"619","endLine":771,"endColumn":17},{"ruleId":"617","severity":1,"message":"658","line":785,"column":16,"nodeType":"593","messageId":"619","endLine":785,"endColumn":17},{"ruleId":"617","severity":1,"message":"659","line":786,"column":18,"nodeType":"593","messageId":"619","endLine":786,"endColumn":19},{"ruleId":"617","severity":1,"message":"658","line":821,"column":16,"nodeType":"593","messageId":"619","endLine":821,"endColumn":17},{"ruleId":"617","severity":1,"message":"659","line":825,"column":18,"nodeType":"593","messageId":"619","endLine":825,"endColumn":19},{"ruleId":"617","severity":1,"message":"658","line":847,"column":16,"nodeType":"593","messageId":"619","endLine":847,"endColumn":17},{"ruleId":"617","severity":1,"message":"659","line":849,"column":15,"nodeType":"593","messageId":"619","endLine":849,"endColumn":16},{"ruleId":"596","severity":1,"message":"660","line":874,"column":6,"nodeType":"598","endLine":874,"endColumn":22,"suggestions":"661"},{"ruleId":"600","severity":1,"message":"601","line":888,"column":13,"nodeType":"602","endLine":888,"endColumn":38},{"ruleId":"574","replacedBy":"662"},{"ruleId":"576","replacedBy":"663"},{"ruleId":"591","severity":1,"message":"664","line":1,"column":28,"nodeType":"593","messageId":"594","endLine":1,"endColumn":36},{"ruleId":"596","severity":1,"message":"665","line":98,"column":6,"nodeType":"598","endLine":98,"endColumn":34,"suggestions":"666"},{"ruleId":"596","severity":1,"message":"665","line":102,"column":6,"nodeType":"598","endLine":102,"endColumn":31,"suggestions":"667"},{"ruleId":"596","severity":1,"message":"665","line":106,"column":6,"nodeType":"598","endLine":106,"endColumn":40,"suggestions":"668"},{"ruleId":"617","severity":1,"message":"658","line":36,"column":14,"nodeType":"593","messageId":"619","endLine":36,"endColumn":15},{"ruleId":"617","severity":1,"message":"659","line":37,"column":16,"nodeType":"593","messageId":"619","endLine":37,"endColumn":17},{"ruleId":"591","severity":1,"message":"607","line":3,"column":8,"nodeType":"593","messageId":"594","endLine":3,"endColumn":17},{"ruleId":"591","severity":1,"message":"627","line":16,"column":8,"nodeType":"593","messageId":"594","endLine":16,"endColumn":20},{"ruleId":"596","severity":1,"message":"665","line":78,"column":6,"nodeType":"598","endLine":78,"endColumn":32,"suggestions":"669"},{"ruleId":"617","severity":1,"message":"658","line":91,"column":16,"nodeType":"593","messageId":"619","endLine":91,"endColumn":17},{"ruleId":"617","severity":1,"message":"658","line":95,"column":16,"nodeType":"593","messageId":"619","endLine":95,"endColumn":17},{"ruleId":"596","severity":1,"message":"670","line":103,"column":6,"nodeType":"598","endLine":103,"endColumn":48,"suggestions":"671"},{"ruleId":"603","severity":1,"message":"604","line":137,"column":13,"nodeType":"602","endLine":137,"endColumn":25},{"ruleId":"600","severity":1,"message":"601","line":138,"column":33,"nodeType":"602","endLine":138,"endColumn":78},{"ruleId":"600","severity":1,"message":"601","line":146,"column":11,"nodeType":"602","endLine":146,"endColumn":43},{"ruleId":"600","severity":1,"message":"601","line":148,"column":13,"nodeType":"602","endLine":148,"endColumn":58},{"ruleId":"600","severity":1,"message":"601","line":163,"column":11,"nodeType":"602","endLine":163,"endColumn":31},{"ruleId":"600","severity":1,"message":"601","line":167,"column":22,"nodeType":"602","endLine":167,"endColumn":70},{"ruleId":"600","severity":1,"message":"601","line":182,"column":22,"nodeType":"602","endLine":182,"endColumn":62},{"ruleId":"600","severity":1,"message":"601","line":197,"column":22,"nodeType":"602","endLine":197,"endColumn":59},{"ruleId":"600","severity":1,"message":"601","line":230,"column":33,"nodeType":"602","endLine":230,"endColumn":55},{"ruleId":"591","severity":1,"message":"672","line":11,"column":10,"nodeType":"593","messageId":"594","endLine":11,"endColumn":31},{"ruleId":"600","severity":1,"message":"601","line":82,"column":7,"nodeType":"602","endLine":82,"endColumn":47},{"ruleId":"591","severity":1,"message":"673","line":63,"column":9,"nodeType":"593","messageId":"594","endLine":63,"endColumn":14},{"ruleId":"591","severity":1,"message":"674","line":96,"column":25,"nodeType":"593","messageId":"594","endLine":96,"endColumn":43},{"ruleId":"596","severity":1,"message":"665","line":106,"column":6,"nodeType":"598","endLine":106,"endColumn":35,"suggestions":"675"},{"ruleId":"596","severity":1,"message":"665","line":110,"column":6,"nodeType":"598","endLine":110,"endColumn":31,"suggestions":"676"},{"ruleId":"591","severity":1,"message":"677","line":18,"column":3,"nodeType":"593","messageId":"594","endLine":18,"endColumn":16},{"ruleId":"591","severity":1,"message":"678","line":21,"column":3,"nodeType":"593","messageId":"594","endLine":21,"endColumn":21},{"ruleId":"591","severity":1,"message":"679","line":201,"column":9,"nodeType":"593","messageId":"594","endLine":201,"endColumn":23},{"ruleId":"591","severity":1,"message":"680","line":204,"column":10,"nodeType":"593","messageId":"594","endLine":204,"endColumn":17},{"ruleId":"591","severity":1,"message":"681","line":204,"column":19,"nodeType":"593","messageId":"594","endLine":204,"endColumn":29},{"ruleId":"591","severity":1,"message":"682","line":212,"column":23,"nodeType":"593","messageId":"594","endLine":212,"endColumn":37},{"ruleId":"591","severity":1,"message":"610","line":216,"column":18,"nodeType":"593","messageId":"594","endLine":216,"endColumn":23},{"ruleId":"591","severity":1,"message":"683","line":254,"column":9,"nodeType":"593","messageId":"594","endLine":254,"endColumn":25},{"ruleId":"596","severity":1,"message":"684","line":299,"column":6,"nodeType":"598","endLine":299,"endColumn":20,"suggestions":"685"},{"ruleId":"596","severity":1,"message":"686","line":338,"column":6,"nodeType":"598","endLine":338,"endColumn":31,"suggestions":"687"},{"ruleId":"596","severity":1,"message":"688","line":351,"column":6,"nodeType":"598","endLine":351,"endColumn":16,"suggestions":"689"},{"ruleId":"596","severity":1,"message":"688","line":364,"column":6,"nodeType":"598","endLine":364,"endColumn":19,"suggestions":"690"},{"ruleId":"596","severity":1,"message":"688","line":392,"column":6,"nodeType":"598","endLine":392,"endColumn":22,"suggestions":"691"},{"ruleId":"596","severity":1,"message":"688","line":409,"column":6,"nodeType":"598","endLine":409,"endColumn":21,"suggestions":"692"},{"ruleId":"596","severity":1,"message":"688","line":424,"column":6,"nodeType":"598","endLine":424,"endColumn":25,"suggestions":"693"},{"ruleId":"596","severity":1,"message":"694","line":432,"column":6,"nodeType":"598","endLine":432,"endColumn":15,"suggestions":"695"},{"ruleId":"596","severity":1,"message":"688","line":445,"column":6,"nodeType":"598","endLine":445,"endColumn":18,"suggestions":"696"},{"ruleId":"596","severity":1,"message":"665","line":455,"column":6,"nodeType":"598","endLine":455,"endColumn":19,"suggestions":"697"},{"ruleId":"596","severity":1,"message":"698","line":472,"column":6,"nodeType":"598","endLine":472,"endColumn":16,"suggestions":"699"},{"ruleId":"596","severity":1,"message":"698","line":488,"column":6,"nodeType":"598","endLine":488,"endColumn":23,"suggestions":"700"},{"ruleId":"596","severity":1,"message":"701","line":509,"column":6,"nodeType":"598","endLine":509,"endColumn":18,"suggestions":"702"},{"ruleId":"596","severity":1,"message":"703","line":520,"column":6,"nodeType":"598","endLine":520,"endColumn":18,"suggestions":"704"},{"ruleId":"600","severity":1,"message":"601","line":565,"column":13,"nodeType":"602","endLine":565,"endColumn":35},{"ruleId":"591","severity":1,"message":"705","line":99,"column":10,"nodeType":"593","messageId":"594","endLine":99,"endColumn":21},{"ruleId":"591","severity":1,"message":"706","line":99,"column":23,"nodeType":"593","messageId":"594","endLine":99,"endColumn":32},{"ruleId":"591","severity":1,"message":"707","line":102,"column":31,"nodeType":"593","messageId":"594","endLine":102,"endColumn":55},{"ruleId":"591","severity":1,"message":"708","line":114,"column":25,"nodeType":"593","messageId":"594","endLine":114,"endColumn":52},{"ruleId":"617","severity":1,"message":"658","line":164,"column":18,"nodeType":"593","messageId":"619","endLine":164,"endColumn":19},{"ruleId":"596","severity":1,"message":"709","line":255,"column":6,"nodeType":"598","endLine":255,"endColumn":19,"suggestions":"710"},{"ruleId":"596","severity":1,"message":"711","line":268,"column":6,"nodeType":"598","endLine":268,"endColumn":22,"suggestions":"712"},{"ruleId":"603","severity":1,"message":"604","line":272,"column":7,"nodeType":"602","endLine":272,"endColumn":48},{"ruleId":"600","severity":1,"message":"601","line":275,"column":13,"nodeType":"602","endLine":275,"endColumn":60},{"ruleId":"600","severity":1,"message":"601","line":283,"column":11,"nodeType":"602","endLine":283,"endColumn":76},{"ruleId":"603","severity":1,"message":"604","line":300,"column":23,"nodeType":"602","endLine":300,"endColumn":35},{"ruleId":"600","severity":1,"message":"601","line":302,"column":27,"nodeType":"602","endLine":302,"endColumn":71},{"ruleId":"713","severity":1,"message":"714","line":320,"column":43,"nodeType":"615","messageId":"715","endLine":320,"endColumn":45},{"ruleId":"596","severity":1,"message":"716","line":14,"column":6,"nodeType":"598","endLine":14,"endColumn":19,"suggestions":"717"},{"ruleId":"603","severity":1,"message":"605","line":32,"column":5,"nodeType":"602","endLine":32,"endColumn":66},{"ruleId":"600","severity":1,"message":"601","line":33,"column":7,"nodeType":"602","endLine":33,"endColumn":60},{"ruleId":"591","severity":1,"message":"718","line":17,"column":7,"nodeType":"593","messageId":"594","endLine":17,"endColumn":12},{"ruleId":"603","severity":1,"message":"604","line":102,"column":13,"nodeType":"602","endLine":102,"endColumn":25},{"ruleId":"600","severity":1,"message":"601","line":103,"column":33,"nodeType":"602","endLine":103,"endColumn":78},{"ruleId":"600","severity":1,"message":"601","line":111,"column":11,"nodeType":"602","endLine":111,"endColumn":36},{"ruleId":"600","severity":1,"message":"601","line":115,"column":11,"nodeType":"602","endLine":115,"endColumn":31},{"ruleId":"603","severity":1,"message":"604","line":127,"column":13,"nodeType":"602","endLine":127,"endColumn":59},{"ruleId":"600","severity":1,"message":"601","line":130,"column":19,"nodeType":"602","endLine":130,"endColumn":66},{"ruleId":"600","severity":1,"message":"601","line":133,"column":17,"nodeType":"602","endLine":136,"endColumn":19},{"ruleId":"603","severity":1,"message":"604","line":153,"column":13,"nodeType":"602","endLine":153,"endColumn":60},{"ruleId":"600","severity":1,"message":"601","line":156,"column":19,"nodeType":"602","endLine":156,"endColumn":66},{"ruleId":"600","severity":1,"message":"601","line":159,"column":17,"nodeType":"602","endLine":162,"endColumn":19},{"ruleId":"600","severity":1,"message":"601","line":14,"column":16,"nodeType":"602","endLine":14,"endColumn":39},{"ruleId":"600","severity":1,"message":"601","line":16,"column":16,"nodeType":"602","endLine":16,"endColumn":40},{"ruleId":"600","severity":1,"message":"601","line":18,"column":16,"nodeType":"602","endLine":18,"endColumn":40},{"ruleId":"600","severity":1,"message":"601","line":35,"column":11,"nodeType":"602","endLine":35,"endColumn":38},{"ruleId":"591","severity":1,"message":"610","line":88,"column":20,"nodeType":"593","messageId":"594","endLine":88,"endColumn":25},{"ruleId":"591","severity":1,"message":"674","line":103,"column":25,"nodeType":"593","messageId":"594","endLine":103,"endColumn":43},{"ruleId":"596","severity":1,"message":"719","line":145,"column":6,"nodeType":"598","endLine":145,"endColumn":15,"suggestions":"720"},{"ruleId":"596","severity":1,"message":"665","line":149,"column":6,"nodeType":"598","endLine":149,"endColumn":32,"suggestions":"721"},{"ruleId":"596","severity":1,"message":"665","line":153,"column":6,"nodeType":"598","endLine":153,"endColumn":30,"suggestions":"722"},{"ruleId":"596","severity":1,"message":"723","line":169,"column":6,"nodeType":"598","endLine":169,"endColumn":17,"suggestions":"724"},{"ruleId":"591","severity":1,"message":"592","line":6,"column":8,"nodeType":"593","messageId":"594","endLine":6,"endColumn":19},{"ruleId":"603","severity":1,"message":"604","line":53,"column":7,"nodeType":"602","endLine":53,"endColumn":52},{"ruleId":"600","severity":1,"message":"601","line":54,"column":9,"nodeType":"602","endLine":54,"endColumn":29},{"ruleId":"603","severity":1,"message":"604","line":58,"column":9,"nodeType":"602","endLine":58,"endColumn":43},{"ruleId":"591","severity":1,"message":"725","line":124,"column":21,"nodeType":"593","messageId":"594","endLine":124,"endColumn":35},{"ruleId":"596","severity":1,"message":"726","line":140,"column":6,"nodeType":"598","endLine":140,"endColumn":22,"suggestions":"727"},{"ruleId":"596","severity":1,"message":"665","line":160,"column":6,"nodeType":"598","endLine":160,"endColumn":34,"suggestions":"728"},{"ruleId":"596","severity":1,"message":"665","line":164,"column":6,"nodeType":"598","endLine":164,"endColumn":31,"suggestions":"729"},{"ruleId":"596","severity":1,"message":"730","line":174,"column":6,"nodeType":"598","endLine":174,"endColumn":19,"suggestions":"731"},{"ruleId":"596","severity":1,"message":"732","line":201,"column":6,"nodeType":"598","endLine":201,"endColumn":18,"suggestions":"733"},{"ruleId":"596","severity":1,"message":"665","line":218,"column":6,"nodeType":"598","endLine":218,"endColumn":22,"suggestions":"734"},{"ruleId":"600","severity":1,"message":"601","line":326,"column":13,"nodeType":"602","endLine":326,"endColumn":36},{"ruleId":"600","severity":1,"message":"601","line":376,"column":38,"nodeType":"602","endLine":376,"endColumn":79},{"ruleId":"600","severity":1,"message":"601","line":405,"column":27,"nodeType":"602","endLine":405,"endColumn":77},{"ruleId":"600","severity":1,"message":"601","line":409,"column":23,"nodeType":"602","endLine":409,"endColumn":73},{"ruleId":"600","severity":1,"message":"601","line":419,"column":29,"nodeType":"602","endLine":419,"endColumn":71},{"ruleId":"600","severity":1,"message":"601","line":426,"column":29,"nodeType":"602","endLine":426,"endColumn":71},{"ruleId":"600","severity":1,"message":"601","line":432,"column":25,"nodeType":"602","endLine":432,"endColumn":67},{"ruleId":"600","severity":1,"message":"601","line":456,"column":21,"nodeType":"602","endLine":456,"endColumn":72},{"ruleId":"600","severity":1,"message":"601","line":489,"column":21,"nodeType":"602","endLine":489,"endColumn":70},{"ruleId":"600","severity":1,"message":"601","line":532,"column":21,"nodeType":"602","endLine":532,"endColumn":40},{"ruleId":"591","severity":1,"message":"607","line":19,"column":8,"nodeType":"593","messageId":"594","endLine":19,"endColumn":17},{"ruleId":"591","severity":1,"message":"735","line":29,"column":26,"nodeType":"593","messageId":"594","endLine":29,"endColumn":39},{"ruleId":"596","severity":1,"message":"665","line":101,"column":6,"nodeType":"598","endLine":101,"endColumn":30,"suggestions":"736"},{"ruleId":"596","severity":1,"message":"665","line":105,"column":6,"nodeType":"598","endLine":105,"endColumn":32,"suggestions":"737"},{"ruleId":"591","severity":1,"message":"738","line":77,"column":24,"nodeType":"593","messageId":"594","endLine":77,"endColumn":29},{"ruleId":"591","severity":1,"message":"739","line":113,"column":23,"nodeType":"593","messageId":"594","endLine":113,"endColumn":29},{"ruleId":"596","severity":1,"message":"665","line":152,"column":6,"nodeType":"598","endLine":152,"endColumn":34,"suggestions":"740"},{"ruleId":"596","severity":1,"message":"741","line":188,"column":6,"nodeType":"598","endLine":188,"endColumn":8,"suggestions":"742"},{"ruleId":"596","severity":1,"message":"743","line":255,"column":6,"nodeType":"598","endLine":255,"endColumn":14,"suggestions":"744"},{"ruleId":"574","replacedBy":"745"},{"ruleId":"576","replacedBy":"746"},{"ruleId":"596","severity":1,"message":"747","line":52,"column":6,"nodeType":"598","endLine":52,"endColumn":12,"suggestions":"748"},{"ruleId":"600","severity":1,"message":"601","line":123,"column":19,"nodeType":"602","endLine":123,"endColumn":61},{"ruleId":"600","severity":1,"message":"601","line":130,"column":19,"nodeType":"602","endLine":130,"endColumn":61},{"ruleId":"600","severity":1,"message":"601","line":137,"column":19,"nodeType":"602","endLine":137,"endColumn":60},{"ruleId":"600","severity":1,"message":"601","line":183,"column":17,"nodeType":"602","endLine":183,"endColumn":59},{"ruleId":"600","severity":1,"message":"601","line":190,"column":17,"nodeType":"602","endLine":190,"endColumn":59},{"ruleId":"600","severity":1,"message":"601","line":197,"column":17,"nodeType":"602","endLine":197,"endColumn":58},{"ruleId":"603","severity":1,"message":"604","line":209,"column":5,"nodeType":"602","endLine":209,"endColumn":17},{"ruleId":"600","severity":1,"message":"601","line":212,"column":11,"nodeType":"602","endLine":212,"endColumn":60},{"ruleId":"600","severity":1,"message":"601","line":222,"column":39,"nodeType":"602","endLine":222,"endColumn":87},{"ruleId":"600","severity":1,"message":"601","line":98,"column":9,"nodeType":"602","endLine":98,"endColumn":57},{"ruleId":"591","severity":1,"message":"607","line":10,"column":8,"nodeType":"593","messageId":"594","endLine":10,"endColumn":17},{"ruleId":"591","severity":1,"message":"749","line":16,"column":8,"nodeType":"593","messageId":"594","endLine":16,"endColumn":19},{"ruleId":"591","severity":1,"message":"750","line":109,"column":10,"nodeType":"593","messageId":"594","endLine":109,"endColumn":14},{"ruleId":"591","severity":1,"message":"751","line":112,"column":23,"nodeType":"593","messageId":"594","endLine":112,"endColumn":37},{"ruleId":"596","severity":1,"message":"665","line":124,"column":6,"nodeType":"598","endLine":124,"endColumn":30,"suggestions":"752"},{"ruleId":"596","severity":1,"message":"665","line":128,"column":6,"nodeType":"598","endLine":128,"endColumn":32,"suggestions":"753"},{"ruleId":"591","severity":1,"message":"754","line":136,"column":9,"nodeType":"593","messageId":"594","endLine":136,"endColumn":12},{"ruleId":"591","severity":1,"message":"755","line":140,"column":9,"nodeType":"593","messageId":"594","endLine":140,"endColumn":31},{"ruleId":"600","severity":1,"message":"601","line":235,"column":11,"nodeType":"602","endLine":235,"endColumn":36},{"ruleId":"600","severity":1,"message":"601","line":237,"column":13,"nodeType":"602","endLine":237,"endColumn":58},{"ruleId":"603","severity":1,"message":"604","line":273,"column":13,"nodeType":"602","endLine":273,"endColumn":59},{"ruleId":"600","severity":1,"message":"601","line":276,"column":17,"nodeType":"602","endLine":279,"endColumn":19},{"ruleId":"600","severity":1,"message":"601","line":287,"column":23,"nodeType":"602","endLine":287,"endColumn":73},{"ruleId":"600","severity":1,"message":"601","line":292,"column":23,"nodeType":"602","endLine":292,"endColumn":68},{"ruleId":"603","severity":1,"message":"604","line":319,"column":13,"nodeType":"602","endLine":319,"endColumn":60},{"ruleId":"600","severity":1,"message":"601","line":322,"column":17,"nodeType":"602","endLine":325,"endColumn":19},{"ruleId":"603","severity":1,"message":"604","line":333,"column":23,"nodeType":"602","endLine":333,"endColumn":35},{"ruleId":"603","severity":1,"message":"604","line":339,"column":34,"nodeType":"602","endLine":339,"endColumn":46},{"ruleId":"596","severity":1,"message":"665","line":95,"column":6,"nodeType":"598","endLine":95,"endColumn":31,"suggestions":"756"},{"ruleId":"617","severity":1,"message":"658","line":121,"column":20,"nodeType":"593","messageId":"619","endLine":121,"endColumn":21},{"ruleId":"574","replacedBy":"757"},{"ruleId":"576","replacedBy":"758"},{"ruleId":"591","severity":1,"message":"759","line":14,"column":9,"nodeType":"593","messageId":"594","endLine":14,"endColumn":13},{"ruleId":"596","severity":1,"message":"760","line":43,"column":6,"nodeType":"593","endLine":43,"endColumn":16},{"ruleId":"596","severity":1,"message":"761","line":43,"column":6,"nodeType":"593","endLine":43,"endColumn":16,"suggestions":"762"},{"ruleId":"600","severity":1,"message":"601","line":49,"column":11,"nodeType":"602","endLine":49,"endColumn":60},{"ruleId":"600","severity":1,"message":"601","line":55,"column":11,"nodeType":"602","endLine":55,"endColumn":61},{"ruleId":"596","severity":1,"message":"665","line":112,"column":6,"nodeType":"598","endLine":112,"endColumn":19,"suggestions":"763"},{"ruleId":"582","severity":1,"message":"583","line":37,"column":1,"nodeType":"584","endLine":72,"endColumn":2},{"ruleId":"591","severity":1,"message":"738","line":44,"column":24,"nodeType":"593","messageId":"594","endLine":44,"endColumn":29},{"ruleId":"591","severity":1,"message":"739","line":49,"column":23,"nodeType":"593","messageId":"594","endLine":49,"endColumn":29},{"ruleId":"591","severity":1,"message":"764","line":58,"column":9,"nodeType":"593","messageId":"594","endLine":58,"endColumn":25},{"ruleId":"591","severity":1,"message":"765","line":67,"column":9,"nodeType":"593","messageId":"594","endLine":67,"endColumn":24},{"ruleId":"596","severity":1,"message":"766","line":100,"column":6,"nodeType":"598","endLine":100,"endColumn":8,"suggestions":"767"},{"ruleId":"596","severity":1,"message":"760","line":154,"column":6,"nodeType":"593","endLine":154,"endColumn":12},{"ruleId":"596","severity":1,"message":"768","line":154,"column":6,"nodeType":"593","endLine":154,"endColumn":12,"suggestions":"769"},{"ruleId":"591","severity":1,"message":"770","line":197,"column":9,"nodeType":"593","messageId":"594","endLine":197,"endColumn":17},{"ruleId":"771","severity":1,"message":"772","line":15,"column":27,"nodeType":"773","messageId":"774","endLine":15,"endColumn":29},{"ruleId":"771","severity":1,"message":"772","line":16,"column":28,"nodeType":"773","messageId":"774","endLine":16,"endColumn":30},{"ruleId":"771","severity":1,"message":"772","line":17,"column":31,"nodeType":"773","messageId":"774","endLine":17,"endColumn":33},{"ruleId":"591","severity":1,"message":"775","line":10,"column":8,"nodeType":"593","messageId":"594","endLine":10,"endColumn":17},{"ruleId":"603","severity":1,"message":"604","line":9,"column":5,"nodeType":"602","endLine":9,"endColumn":17},{"ruleId":"600","severity":1,"message":"601","line":17,"column":11,"nodeType":"602","endLine":17,"endColumn":64},{"ruleId":"591","severity":1,"message":"776","line":10,"column":3,"nodeType":"593","messageId":"594","endLine":10,"endColumn":10},{"ruleId":"591","severity":1,"message":"777","line":11,"column":3,"nodeType":"593","messageId":"594","endLine":11,"endColumn":15},{"ruleId":"591","severity":1,"message":"778","line":13,"column":3,"nodeType":"593","messageId":"594","endLine":13,"endColumn":12},{"ruleId":"591","severity":1,"message":"606","line":15,"column":8,"nodeType":"593","messageId":"594","endLine":15,"endColumn":13},{"ruleId":"591","severity":1,"message":"779","line":25,"column":8,"nodeType":"593","messageId":"594","endLine":25,"endColumn":16},{"ruleId":"591","severity":1,"message":"780","line":41,"column":7,"nodeType":"593","messageId":"594","endLine":41,"endColumn":13},{"ruleId":"600","severity":1,"message":"601","line":254,"column":23,"nodeType":"602","endLine":254,"endColumn":71},{"ruleId":"591","severity":1,"message":"664","line":1,"column":17,"nodeType":"593","messageId":"594","endLine":1,"endColumn":25},{"ruleId":"591","severity":1,"message":"781","line":5,"column":8,"nodeType":"593","messageId":"594","endLine":5,"endColumn":13},{"ruleId":"591","severity":1,"message":"782","line":7,"column":8,"nodeType":"593","messageId":"594","endLine":7,"endColumn":19},{"ruleId":"600","severity":1,"message":"601","line":14,"column":9,"nodeType":"602","endLine":14,"endColumn":38},{"ruleId":"603","severity":1,"message":"604","line":25,"column":13,"nodeType":"602","endLine":25,"endColumn":25},{"ruleId":"600","severity":1,"message":"601","line":26,"column":15,"nodeType":"602","endLine":26,"endColumn":39},"no-native-reassign",["783"],"no-negated-in-lhs",["784"],["783"],["784"],["783"],["784"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["783"],["784"],["783"],["784"],["783"],["784"],"no-unused-vars","'user_avatar' is defined but never used.","Identifier","unusedVar","'VoiceCall' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'roomDetails'. Either include it or remove the dependency array.","ArrayExpression",["785"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'CIcon' is defined but never used.","'userImage' is defined but never used.",["783"],["784"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'staffData.subjects'. Either include them or remove the dependency array.",["786"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i', 'j', 'k'.","ArrowFunctionExpression","unsafeRefs","no-redeclare","'l' is already defined.","redeclared",["787"],"React Hook useEffect has missing dependencies: 'dispatch' and 'staffData'. Either include them or remove the dependency array.",["788"],"React Hook useEffect has missing dependencies: 'data' and 'dispatch'. Either include them or remove the dependency array.",["789"],["783"],["784"],"'ReactTooltip' is defined but never used.","'copy' is defined but never used.","'video_icon' is defined but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["790"],"'handleVideoDownload' is assigned a value but never used.","'handleDeleteMessage' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'setSelectedGroup' is defined but never used.","'setClasses' is defined but never used.","React Hook useEffect has missing dependencies: 'dataFromServer?.user' and 'dispatch'. Either include them or remove the dependency array.",["791"],["792"],["793"],["794"],["795"],["796"],["797"],["798"],["799"],["800"],"React Hook useEffect has missing dependencies: 'classesInChatTab', 'data', and 'dispatch'. Either include them or remove the dependency array.",["801"],"'data' is already defined.","'newRoomArray' is already defined.","React Hook useEffect has missing dependencies: 'classShowCollapse', 'dataFromServer.user', 'dispatch', 'getRoomsInClass.data', and 'moreRooms'. Either include them or remove the dependency array.",["802"],"React Hook useEffect has missing dependencies: 'email' and 'getRoomsInClass'. Either include them or remove the dependency array.",["803"],["804"],"'i' is already defined.","'j' is already defined.","React Hook useEffect has missing dependencies: 'dispatch' and 'email'. Either include them or remove the dependency array.",["805"],["783"],["784"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["806"],["807"],["808"],["809"],"React Hook useEffect has missing dependencies: 'classFromServer' and 'roomDetails'. Either include them or remove the dependency array.",["810"],"'offsetLimitPagination' is defined but never used.","'email' is assigned a value but never used.","'createMessageProps' is assigned a value but never used.",["811"],["812"],"'setNewMessage' is defined but never used.","'setEachRoomDetails' is defined but never used.","'updateListRoom' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'setNewRoomName' is assigned a value but never used.","'roomWithNewUsers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chosenRoom' and 'moreMessageData'. Either include them or remove the dependency array.",["813"],"React Hook useEffect has missing dependencies: 'dataFromServer.room', 'dispatch', 'moreMessageData.data.room', and 'moreMessages'. Either include them or remove the dependency array.",["814"],"React Hook useEffect has missing dependencies: 'dataFromServer.room' and 'dispatch'. Either include them or remove the dependency array.",["815"],["816"],["817"],["818"],["819"],"React Hook useEffect has missing dependencies: 'chosenRoom', 'data', 'dataFromServer', and 'dispatch'. Either include them or remove the dependency array.",["820"],["821"],["822"],"React Hook useEffect has missing dependencies: 'chosenRoom', 'dataFromServer.room', and 'dispatch'. Either include them or remove the dependency array.",["823"],["824"],"React Hook useEffect has missing dependencies: 'chosenRoom', 'dataFromServer', and 'dispatch'. Either include them or remove the dependency array.",["825"],"React Hook useEffect has missing dependencies: 'data', 'dataFromServer', and 'dispatch'. Either include them or remove the dependency array.",["826"],"'modalIsOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'updateUserSeenRoomsProps' is assigned a value but never used.","'updateUserSeenMessagesProps' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSelectedGroup'. Either include it or remove the dependency array.",["827"],"React Hook useEffect has missing dependencies: 'dispatch', 'handleSelectedGroup', and 'newRoomNameData'. Either include them or remove the dependency array.",["828"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'handlecChosenTab' and 'name'. Either include them or remove the dependency array.",["829"],"'files' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'dispatch', and 'email'. Either include them or remove the dependency array.",["830"],["831"],["832"],"React Hook useEffect has missing dependencies: 'className', 'createRoom', 'email', 'newRoom.arrayEmail', and 'newRoom.name'. Either include them or remove the dependency array.",["833"],"'setTypingProps' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkCallState'. Either include it or remove the dependency array.",["834"],["835"],["836"],"React Hook useEffect has a missing dependency: 'contentMessage'. Either include it or remove the dependency array. You can also do a functional update 'setContentMessage(c => ...)' if you only need 'contentMessage' in the 'setContentMessage' call.",["837"],"React Hook useEffect has missing dependencies: 'email', 'replyToMessage', 'roomDetails.name', and 'uploadFile'. Either include them or remove the dependency array.",["838"],["839"],"'EMAIL_INVALID' is defined but never used.",["840"],["841"],"'props' is assigned a value but never used.","'props1' is assigned a value but never used.",["842"],"React Hook useEffect has missing dependencies: 'createMessage', 'dispatch', 'roomName', 'type', and 'userOutRoom'. Either include them or remove the dependency array.",["843"],"React Hook useEffect has missing dependencies: 'roomName', 'type', and 'userJoinRoom'. Either include them or remove the dependency array.",["844"],["783"],["784"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'numberGroup', 'play', and 'updateListRoom'. Either include them or remove the dependency array.",["845"],"'open_status' is defined but never used.","'show' is assigned a value but never used.","'setUploadedImg' is assigned a value but never used.",["846"],["847"],"'ref' is assigned a value but never used.","'handleOpenDropdownMenu' is assigned a value but never used.",["848"],["783"],["784"],"'user' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'room.users', 'roomData', and 'userOnline'. Either include them or remove the dependency array. You can also do a functional update 'setRoomData(r => ...)' if you only need 'roomData' in the 'setRoomData' call.",["849"],["850"],"'userJoinRoomData' is assigned a value but never used.","'userOutRoomData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'roomName' and 'userOutRoom'. Either include them or remove the dependency array.",["851"],"React Hook useEffect has missing dependencies: 'myPeer', 'roomName', and 'userJoinRoom'. Either include them or remove the dependency array.",["852"],"'hasAudio' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ErrorPage' is defined but never used.","'CButton' is defined but never used.","'CButtonGroup' is defined but never used.","'CProgress' is defined but never used.","'download' is defined but never used.","'fields' is assigned a value but never used.","'clock' is defined but never used.","'clock_black' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"853","fix":"854"},{"desc":"855","fix":"856"},{"desc":"857","fix":"858"},{"desc":"859","fix":"860"},{"desc":"861","fix":"862"},{"desc":"863","fix":"864"},{"desc":"865","fix":"866"},{"desc":"867","fix":"868"},{"desc":"869","fix":"870"},{"desc":"871","fix":"872"},{"desc":"873","fix":"874"},{"desc":"875","fix":"876"},{"desc":"877","fix":"878"},{"desc":"879","fix":"880"},{"desc":"881","fix":"882"},{"desc":"883","fix":"884"},{"desc":"885","fix":"886"},{"desc":"887","fix":"888"},{"desc":"889","fix":"890"},{"desc":"891","fix":"892"},{"desc":"893","fix":"894"},{"desc":"895","fix":"896"},{"desc":"897","fix":"898"},{"desc":"899","fix":"900"},{"desc":"901","fix":"902"},{"desc":"903","fix":"904"},{"desc":"905","fix":"906"},{"desc":"907","fix":"908"},{"desc":"909","fix":"910"},{"desc":"911","fix":"912"},{"desc":"913","fix":"914"},{"desc":"915","fix":"916"},{"desc":"917","fix":"918"},{"desc":"919","fix":"920"},{"desc":"921","fix":"922"},{"desc":"923","fix":"924"},{"desc":"925","fix":"926"},{"desc":"927","fix":"928"},{"desc":"929","fix":"930"},{"desc":"931","fix":"932"},{"desc":"933","fix":"934"},{"desc":"935","fix":"936"},{"desc":"937","fix":"938"},{"desc":"939","fix":"940"},{"desc":"941","fix":"942"},{"desc":"943","fix":"944"},{"desc":"901","fix":"945"},{"desc":"946","fix":"947"},{"desc":"948","fix":"949"},{"desc":"950","fix":"951"},{"desc":"952","fix":"953"},{"desc":"954","fix":"955"},{"desc":"956","fix":"957"},{"desc":"958","fix":"959"},{"desc":"960","fix":"961"},{"desc":"962","fix":"963"},{"desc":"901","fix":"964"},{"desc":"952","fix":"965"},{"desc":"966","fix":"967"},{"desc":"968","fix":"969"},{"desc":"970","fix":"971"},{"desc":"962","fix":"972"},{"desc":"901","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},"Update the dependencies array to be: [callVideoState, roomDetails]",{"range":"984","text":"985"},"Update the dependencies array to be: [dispatch, newRoom, staffData.subjects]",{"range":"986","text":"987"},"Update the dependencies array to be: [dispatch, newUser, staffData.subjects]",{"range":"988","text":"989"},"Update the dependencies array to be: [dispatch, staffData, userChangeStatus]",{"range":"990","text":"991"},"Update the dependencies array to be: [data, dispatch, loading]",{"range":"992","text":"993"},"Update the dependencies array to be: [dispatch, updateUserSeenMessagesProps.loading]",{"range":"994","text":"995"},"Update the dependencies array to be: [dataFromServer?.user, dataNewRoom.data.newRoom, dispatch]",{"range":"996","text":"997"},"Update the dependencies array to be: [dataFromServer?.user, dataNewMessage.data.newMessage, dispatch]",{"range":"998","text":"999"},"Update the dependencies array to be: [dataFromServer?.user, dispatch, newRoomAdded]",{"range":"1000","text":"1001"},"Update the dependencies array to be: [dataFromServer?.user, dispatch, removedRoom]",{"range":"1002","text":"1003"},"Update the dependencies array to be: [dataFromServer?.user, dispatch, usersSeenMessage]",{"range":"1004","text":"1005"},"Update the dependencies array to be: [dataFromServer?.user, dispatch, seenRooms]",{"range":"1006","text":"1007"},"Update the dependencies array to be: [dataFromServer?.user, dispatch, newRoomAvatarData]",{"range":"1008","text":"1009"},"Update the dependencies array to be: [dataFromServer?.user, dispatch, newEvent]",{"range":"1010","text":"1011"},"Update the dependencies array to be: [dataFromServer?.user, dispatch, newRoomNameData]",{"range":"1012","text":"1013"},"Update the dependencies array to be: [avatarRoom, dataFromServer?.user, dispatch]",{"range":"1014","text":"1015"},"Update the dependencies array to be: [classesInChatTab, data, dispatch, loading]",{"range":"1016","text":"1017"},"Update the dependencies array to be: [classShowCollapse, dataFromServer.user, dispatch, getRoomsInClass.data, getRoomsInClass.loading, moreRooms]",{"range":"1018","text":"1019"},"Update the dependencies array to be: [email, getRoomsInClass, moreRooms]",{"range":"1020","text":"1021"},"Update the dependencies array to be: [classShowCollapse, email, getRoomsInClass]",{"range":"1022","text":"1023"},"Update the dependencies array to be: [dataFromServer, dispatch, email]",{"range":"1024","text":"1025"},"Update the dependencies array to be: [deleteMessageProps.loading, dispatch]",{"range":"1026","text":"1027"},"Update the dependencies array to be: [deleteRoomProps.loading, dispatch]",{"range":"1028","text":"1029"},"Update the dependencies array to be: [dispatch, removeUsersFromRoomProps.loading]",{"range":"1030","text":"1031"},"Update the dependencies array to be: [dispatch, updateAvatarPros.loading]",{"range":"1032","text":"1033"},"Update the dependencies array to be: [roomDetails.users, classFromServer.users, roomDetails, classFromServer]",{"range":"1034","text":"1035"},"Update the dependencies array to be: [addUsersToRoomProps.loading, dispatch]",{"range":"1036","text":"1037"},"Update the dependencies array to be: [dispatch, updateRoomProps.loading]",{"range":"1038","text":"1039"},"Update the dependencies array to be: [chosenRoom, moreMessageData, moreMessages]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [dataFromServer.room, dispatch, moreMessageData.data.room, moreMessageData.loading, moreMessages]",{"range":"1042","text":"1043"},"Update the dependencies array to be: [dataFromServer.room, dispatch, newEvent]",{"range":"1044","text":"1045"},"Update the dependencies array to be: [dataFromServer.room, dispatch, newRoomName]",{"range":"1046","text":"1047"},"Update the dependencies array to be: [dataFromServer.room, dispatch, updatedMessage]",{"range":"1048","text":"1049"},"Update the dependencies array to be: [dataFromServer.room, deleteMessage, dispatch]",{"range":"1050","text":"1051"},"Update the dependencies array to be: [dataFromServer.room, dispatch, newRoomAvatarData]",{"range":"1052","text":"1053"},"Update the dependencies array to be: [chosenRoom, data, dataFromServer, dispatch, loading]",{"range":"1054","text":"1055"},"Update the dependencies array to be: [avatarRoom, dataFromServer.room, dispatch]",{"range":"1056","text":"1057"},"Update the dependencies array to be: [deletedRoom, dispatch]",{"range":"1058","text":"1059"},"Update the dependencies array to be: [chosenRoom, dataFromServer.room, dispatch, newUsers]",{"range":"1060","text":"1061"},"Update the dependencies array to be: [chosenRoom, dataFromServer.room, deletedUserData, dispatch]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [chosenRoom, dataFromServer, dispatch, newMessage]",{"range":"1064","text":"1065"},"Update the dependencies array to be: [chosenRoom, data, dataFromServer, dispatch]",{"range":"1066","text":"1067"},"Update the dependencies array to be: [deletedRoom, handleSelectedGroup]",{"range":"1068","text":"1069"},"Update the dependencies array to be: [dispatch, handleSelectedGroup, newRoomNameData, updateListRoom]",{"range":"1070","text":"1071"},"Update the dependencies array to be: [handlecChosenTab, name, selectedTab]",{"range":"1072","text":"1073"},"Update the dependencies array to be: [data, dispatch, email, loading]",{"range":"1074","text":"1075"},{"range":"1076","text":"1033"},"Update the dependencies array to be: [createRoomPros.loading, dispatch]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [className, createRoom, email, newRoom.arrayEmail, newRoom.name, urlAvatar]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [callVideoState, checkCallState]",{"range":"1081","text":"1082"},"Update the dependencies array to be: [createMessageProps.loading, dispatch]",{"range":"1083","text":"1084"},"Update the dependencies array to be: [dispatch, uploadFileProps.loading]",{"range":"1085","text":"1086"},"Update the dependencies array to be: [chosenEmoji, contentMessage]",{"range":"1087","text":"1088"},"Update the dependencies array to be: [email, fileUpload, replyToMessage, roomDetails.name, uploadFile]",{"range":"1089","text":"1090"},"Update the dependencies array to be: [dispatch, typingSub.data]",{"range":"1091","text":"1092"},"Update the dependencies array to be: [dispatch, updateUserPros.loading]",{"range":"1093","text":"1094"},{"range":"1095","text":"1033"},{"range":"1096","text":"1084"},"Update the dependencies array to be: [createMessage, dispatch, roomName, type, userOutRoom]",{"range":"1097","text":"1098"},"Update the dependencies array to be: [myPeer, roomName, type, userJoinRoom]",{"range":"1099","text":"1100"},"Update the dependencies array to be: [dispatch, item, numberGroup, play, updateListRoom]",{"range":"1101","text":"1102"},{"range":"1103","text":"1094"},{"range":"1104","text":"1033"},"Update the dependencies array to be: [createUserProps.loading, dispatch]",{"range":"1105","text":"1106"},"Update the dependencies array to be: [room.users, roomData, userOnline]",{"range":"1107","text":"1108"},"Update the dependencies array to be: [dispatch, roomDetails]",{"range":"1109","text":"1110"},"Update the dependencies array to be: [roomName, userOutRoom]",{"range":"1111","text":"1112"},"Update the dependencies array to be: [myPeer, roomName, userJoinRoom]",{"range":"1113","text":"1114"},[1352,1368],"[callVideoState, roomDetails]",[4082,4091],"[dispatch, newRoom, staffData.subjects]",[6142,6151],"[dispatch, newUser, staffData.subjects]",[8005,8023],"[dispatch, staffData, userChangeStatus]",[8188,8197],"[data, dispatch, loading]",[2585,2622],"[dispatch, updateUserSeenMessagesProps.loading]",[6615,6642],"[dataFromServer?.user, dataNewRoom.data.newRoom, dispatch]",[7434,7467],"[dataFromServer?.user, dataNewMessage.data.newMessage, dispatch]",[8208,8222],"[dataFromServer?.user, dispatch, newRoomAdded]",[8780,8793],"[dataFromServer?.user, dispatch, removedRoom]",[10853,10871],"[dataFromServer?.user, dispatch, usersSeenMessage]",[11130,11141],"[dataFromServer?.user, dispatch, seenRooms]",[11856,11875],"[dataFromServer?.user, dispatch, newRoomAvatarData]",[12574,12584],"[dataFromServer?.user, dispatch, newEvent]",[13279,13296],"[dataFromServer?.user, dispatch, newRoomNameData]",[14039,14051],"[avatarRoom, dataFromServer?.user, dispatch]",[15153,15162],"[classesInChatTab, data, dispatch, loading]",[17808,17833],"[classShowCollapse, dataFromServer.user, dispatch, getRoomsInClass.data, getRoomsInClass.loading, moreRooms]",[18087,18098],"[email, getRoomsInClass, moreRooms]",[18283,18302],"[classShowCollapse, email, getRoomsInClass]",[22064,22080],"[dataFromServer, dispatch, email]",[2164,2192],"[deleteMessageProps.loading, dispatch]",[2272,2297],"[deleteRoomProps.loading, dispatch]",[2386,2420],"[dispatch, removeUsersFromRoomProps.loading]",[2183,2209],"[dispatch, updateAvatarPros.loading]",[2875,2917],"[roomDetails.users, classFromServer.users, roomDetails, classFromServer]",[2504,2533],"[addUsersToRoomProps.loading, dispatch]",[2613,2638],"[dispatch, updateRoomProps.loading]",[6653,6667],"[chosenRoom, moreMessageData, moreMessages]",[7665,7690],"[dataFromServer.room, dispatch, moreMessageData.data.room, moreMessageData.loading, moreMessages]",[7934,7944],"[dataFromServer.room, dispatch, newEvent]",[8193,8206],"[dataFromServer.room, dispatch, newRoomName]",[8933,8949],"[dataFromServer.room, dispatch, updatedMessage]",[9361,9376],"[dataFromServer.room, deleteMessage, dispatch]",[9670,9689],"[dataFromServer.room, dispatch, newRoomAvatarData]",[9866,9875],"[chosenRoom, data, dataFromServer, dispatch, loading]",[10119,10131],"[avatarRoom, dataFromServer.room, dispatch]",[10296,10309],"[deletedRoom, dispatch]",[10652,10662],"[chosenRoom, dataFromServer.room, dispatch, newUsers]",[11043,11060],"[chosenRoom, dataFromServer.room, deletedUserData, dispatch]",[11574,11586],"[chosenRoom, dataFromServer, dispatch, newMessage]",[11832,11844],"[chosenRoom, data, dataFromServer, dispatch]",[6635,6648],"[deletedRoom, handleSelectedGroup]",[7004,7020],"[dispatch, handleSelectedGroup, newRoomNameData, updateListRoom]",[371,384],"[handlecChosenTab, name, selectedTab]",[3281,3290],"[data, dispatch, email, loading]",[3371,3397],[3476,3500],"[createRoomPros.loading, dispatch]",[3842,3853],"[className, createRoom, email, newRoom.arrayEmail, newRoom.name, urlAvatar]",[3511,3527],"[callVideoState, checkCallState]",[3997,4025],"[createMessageProps.loading, dispatch]",[4105,4130],"[dispatch, uploadFileProps.loading]",[4369,4382],"[chosenEmoji, contentMessage]",[5042,5054],"[email, fileUpload, replyToMessage, roomDetails.name, uploadFile]",[5472,5488],"[dispatch, typingSub.data]",[2472,2496],"[dispatch, updateUserPros.loading]",[2577,2603],[3762,3790],[4765,4767],"[createMessage, dispatch, roomName, type, userOutRoom]",[6808,6816],"[myPeer, roomName, type, userJoinRoom]",[1576,1582],"[dispatch, item, numberGroup, play, updateListRoom]",[3507,3531],[3612,3638],[1839,1864],"[createUserProps.loading, dispatch]",[1186,1196],"[room.users, roomData, userOnline]",[3009,3022],"[dispatch, roomDetails]",[2397,2399],"[roomName, userOutRoom]",[3932,3938],"[myPeer, roomName, userJoinRoom]"]